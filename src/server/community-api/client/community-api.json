{
  "swagger": "2.0",
  "info": {
    "description": "<h2>REST service for accessing community probation information</h2><p>This service provides endpoints for accessing data primary sourced from National Delius about people that are of interest to HM Probation Service.</p><p>There is cross-over with the <b>prison-api</b> though suspects on remand will not be surfaced by this API unless that have previously been on probation.</p><div>This service is secured by <b>OAuth2</b> with tokens supplied by HMPPS Auth. Most read-only endpoints require the <b>ROLE_COMMUNITY</b> to access, but check each endpoint where this differs.<p>This service can be accessed in a number environments. For each environment a different set of OAuth2 credentials from HMPPS Auth are required</p><ul><li>Development: <b>https://community-api.dev.probation.service.justice.gov.uk</b></li><li>Test: <b>https://community-api.test.probation.service.justice.gov.uk</b></li><li>Pre-production: <b>https://community-api.pre-prod.delius.probation.hmpps.dsd.io</b></li><li>Production: <b>https://community-api.probation.service.justice.gov.uk</b></li></ul><div>",
    "version": "2021-09-08.6231.e96e6fb",
    "title": "Community API Documentation",
    "termsOfService": "https://gateway.nomis-api.service.justice.gov.uk/auth/terms",
    "contact": {
      "name": "HMPPS Digital Studio",
      "email": "dps-hmpps@digital.justice.gov.uk"
    },
    "license": {
      "name": "Open Government Licence v3.0",
      "url": "https://www.nationalarchives.gov.uk/doc/open-government-licence/version/3/"
    }
  },
  "host": "community-api-secure.test.delius.probation.hmpps.dsd.io",
  "basePath": "/",
  "tags": [
    {
      "name": "-- Popular core APIs --",
      "description": "Endpoints that are most often used by clients"
    },
    {
      "name": "Appointments",
      "description": "Appointment Meta Controller"
    },
    {
      "name": "Authentication and users",
      "description": "Authentication and authorisation endpoints for access roles and user details"
    },
    {
      "name": "Contact and attendance",
      "description": "Offender case notes, also known as Contacts in Delius and attendances"
    },
    {
      "name": "Contacts",
      "description": "Notification Controller"
    },
    {
      "name": "Convictions",
      "description": "Offender conviction related, also known as Events in Delius"
    },
    {
      "name": "Core offender",
      "description": "Offender related endpoints"
    },
    {
      "name": "Court appearances",
      "description": "Offender court appearances that have been recorded by probation"
    },
    {
      "name": "Courts",
      "description": "Court Resource"
    },
    {
      "name": "Custody",
      "description": "Offender custody information"
    },
    {
      "name": "Documents",
      "description": "Documents related to a offender and their sentence"
    },
    {
      "name": "Events",
      "description": "Endpoints to support propagation of offender related events"
    },
    {
      "name": "Offender Court Reports",
      "description": "Court Report Resource"
    },
    {
      "name": "Offender managers",
      "description": "Community and prison offender managers and responsible officers"
    },
    {
      "name": "Personal circumstances",
      "description": "Offender personal circumstances, e.g. medical condition"
    },
    {
      "name": "Reference data",
      "description": "Retrieves Delius reference data"
    },
    {
      "name": "Referrals",
      "description": "Referral Controller"
    },
    {
      "name": "Risks and Registrations",
      "description": "Offender registers, e.g sex offenders register, TACT, MAPPA etc"
    },
    {
      "name": "Sentence dates",
      "description": "Endpoints to set and retrieve sentence dates"
    },
    {
      "name": "Sentence requirements and breach",
      "description": "Offender sentence requires and breaches of those requirements"
    },
    {
      "name": "Smoke test",
      "description": "Smoke Test Helper Resource"
    },
    {
      "name": "Staff",
      "description": "Staff related endpoints. Staff are typically offender managers and maybe users of Delius"
    },
    {
      "name": "Users",
      "description": "User Controller"
    },
    {
      "name": "operation-handler",
      "description": "Operation Handler"
    },
    {
      "name": "team-resource",
      "description": "Team Resource"
    }
  ],
  "paths": {
    "/health": {
      "get": {
        "tags": ["operation-handler"],
        "summary": "handle",
        "operationId": "handleUsingGET",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json",
          "application/vnd.spring-boot.actuator.v3+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/health/**": {
      "get": {
        "tags": ["operation-handler"],
        "summary": "handle",
        "operationId": "handleUsingGET_1",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json",
          "application/vnd.spring-boot.actuator.v3+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/info": {
      "get": {
        "tags": ["operation-handler"],
        "summary": "handle",
        "operationId": "handleUsingGET_2",
        "produces": [
          "application/json",
          "application/vnd.spring-boot.actuator.v2+json",
          "application/vnd.spring-boot.actuator.v3+json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/ping": {
      "get": {
        "tags": ["operation-handler"],
        "summary": "handle",
        "operationId": "handleUsingGET_3",
        "produces": ["text/plain"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "body",
            "required": false,
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/secure/appointment-types": {
      "get": {
        "tags": ["Appointments"],
        "summary": "Determines all valid appointment types & their meta",
        "operationId": "getAllAppointmentTypesUsingGET",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "All valid appointment types",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppointmentType"
              }
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/authenticate": {
      "post": {
        "tags": ["Authentication and users"],
        "summary": "Authenticate a username and password against Delius Identity (LDAP)",
        "operationId": "authenticateUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "authUser",
            "description": "Authentication Details",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthUser"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_AUTH_INT"
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY_AUTH_INT": []
          }
        ]
      }
    },
    "/secure/contact-types": {
      "get": {
        "tags": ["Contact and attendance"],
        "summary": "Returns all selectable contact types or those in specified categories",
        "operationId": "getContactTypesUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "categories",
            "in": "query",
            "description": "Contact category codes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact types belonging to specified categories",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ContactType"
              }
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/courtAppearances": {
      "get": {
        "tags": ["Court appearances"],
        "summary": "Returns all court appearances on and after the given date.",
        "operationId": "getCourtAppearancesUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "fromDate",
            "in": "query",
            "description": "Return court appearances from the given date. Defaults to today if not provided.",
            "required": true,
            "type": "string",
            "x-example": "2019-03-02"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CourtAppearanceMinimalWrapper"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/courts": {
      "get": {
        "tags": ["Courts"],
        "summary": "Experimental API to get all court entities",
        "description": "requires ROLE_MAINTAIN_REF_DATA and read scope",
        "operationId": "getCourtsUsingGET",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Court"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_MAINTAIN_REF_DATA and read scope"
          },
          "409": {
            "description": "Attempt to retrieve the latest update that is already in progress",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "post": {
        "tags": ["Courts"],
        "summary": "Experimental API to insert a court entity",
        "description": "requires ROLE_MAINTAIN_REF_DATA and write scope",
        "operationId": "insertCourtUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "court",
            "description": "court",
            "required": true,
            "schema": {
              "$ref": "#/definitions/NewCourtDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Court"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_MAINTAIN_REF_DATA and write scope"
          },
          "404": {
            "description": "Court not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Attempt to retrieve the latest update that is already in progress",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/courts/code/{code}": {
      "get": {
        "tags": ["Courts"],
        "summary": "Experimental API to get a court entity",
        "description": "requires ROLE_MAINTAIN_REF_DATA and read scope",
        "operationId": "getCourtUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "code",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Court"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_MAINTAIN_REF_DATA and read scope"
          },
          "404": {
            "description": "Court not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Attempt to retrieve the latest update that is already in progress",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "put": {
        "tags": ["Courts"],
        "summary": "Experimental API to update a court entity",
        "description": "requires ROLE_MAINTAIN_REF_DATA and write scope",
        "operationId": "updateCourtUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "unique code for this court",
            "required": true,
            "type": "string",
            "x-example": "SALEMC"
          },
          {
            "in": "body",
            "name": "court",
            "description": "court",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCourtDto"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Court"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_MAINTAIN_REF_DATA and write scope"
          },
          "404": {
            "description": "Court not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Attempt to retrieve the latest update that is already in progress",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/nomisCaseNotes/{nomisId}/{caseNotesId}": {
      "put": {
        "tags": ["Contact and attendance"],
        "summary": "Adds case note to delius",
        "operationId": "upsertCaseNotesToDeliusUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "caseNote",
            "description": "caseNote",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "caseNotesId",
            "in": "path",
            "description": "caseNotesId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "nomisId",
            "in": "path",
            "description": "nomisId",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "string"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_DELIUS_CASE_NOTES"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenderDeltaIds": {
      "get": {
        "tags": ["Events"],
        "summary": "Returns a list of offender IDs which have be inserted/updated or deleted",
        "operationId": "getOffenderDeltasUsingGET",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OffenderDelta"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_PROBATION_OFFENDER_EVENTS"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      },
      "delete": {
        "tags": ["Events"],
        "summary": "Deletes delta data before the date supplied",
        "operationId": "deleteOffenderDeltasUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "before",
            "in": "query",
            "description": "Delete records before the date time provided",
            "required": true,
            "type": "string",
            "format": "date-time",
            "x-example": "2019-03-02T16:45:00.000Z"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_PROBATION_OFFENDER_EVENTS"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender"],
        "summary": "Returns the offender summary for the given crn",
        "operationId": "getOffenderSummaryByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderDetailSummary"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, the offender may have exclusions or restrictions in place preventing some users from viewing. Adopting the client scopes SCOPE_IGNORE_DELIUS_INCLUSIONS_ALWAYS and SCOPE_IGNORE_DELIUS_EXCLUSIONS_ALWAYS can bypass these restrictions."
          },
          "404": {
            "description": "The offender not found"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/all": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender"],
        "summary": "Returns the full offender detail for the given crn",
        "operationId": "getOffenderDetailByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderDetail"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, the offender may have exclusions or restrictions in place preventing some users from viewing. Adopting the client scopes SCOPE_IGNORE_DELIUS_INCLUSIONS_ALWAYS and SCOPE_IGNORE_DELIUS_EXCLUSIONS_ALWAYS can bypass these restrictions."
          },
          "404": {
            "description": "The offender is not found"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/allOffenderManagers": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender", "Offender managers"],
        "summary": "Returns the current community and prison offender managers for an offender",
        "description": "Accepts an offender CRN in the format A999999",
        "operationId": "getAllOffenderManagersForOffenderbyCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "X320741"
          },
          {
            "name": "includeProbationAreaTeams",
            "in": "query",
            "description": "include teams on the ProbationArea records",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommunityOrPrisonOffenderManager"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/appointments": {
      "get": {
        "tags": ["Appointments"],
        "summary": "Gets all appointments for a specific offender by CRN",
        "operationId": "getOffenderAppointmentsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "attended",
            "in": "query",
            "description": "attended",
            "required": false,
            "type": "string",
            "enum": ["ATTENDED", "NOT_RECORDED", "UNATTENDED"]
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "from",
            "in": "query",
            "description": "date of the earliest appointment",
            "required": false,
            "type": "string"
          },
          {
            "name": "to",
            "in": "query",
            "description": "date of the latest appointment",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/AppointmentDetail"
              }
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/appointments/{appointmentId}": {
      "get": {
        "tags": ["Appointments"],
        "summary": "Gets offender appointment by CRN & appointment id",
        "operationId": "getOffenderAppointmentByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "appointmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentDetail"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Appointment or offender not found"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/appointments/{appointmentId}/outcome/context/{contextName}": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Updates an Contact appointment outcome",
        "operationId": "updateAppointmentOutcomeWithContextUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "appointmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "appointmentOutcomeRequest",
            "description": "appointmentOutcomeRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextlessAppointmentOutcomeRequest"
            }
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "Name identifying preprocessing applied to the request",
            "required": true,
            "type": "string",
            "x-example": "commissioned-rehabilitation-services"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/appointments/{appointmentId}/relocate": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Relocates an appointment",
        "operationId": "relocateAppointmentUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "appointmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "appointmentRelocateRequest",
            "description": "appointmentRelocateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentRelocateRequest"
            }
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/appointments/{appointmentId}/reschedule/context/{contextName}": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Reschedules an appointment",
        "operationId": "rescheduleAppointmentWithContextNameUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointmentId",
            "in": "path",
            "description": "appointmentId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "in": "body",
            "name": "appointmentRescheduleRequest",
            "description": "appointmentRescheduleRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextlessAppointmentRescheduleRequest"
            }
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "Name identifying preprocessing applied to the request",
            "required": true,
            "type": "string",
            "x-example": "commissioned-rehabilitation-services"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/assessments": {
      "get": {
        "tags": ["Assessments", "Core offender"],
        "summary": "Return the assessments for a CRN",
        "operationId": "getAssessmentsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderAssessments"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/contact-summary": {
      "get": {
        "tags": ["Contact and attendance", "Core offender"],
        "summary": "Returns the contact summaries for an offender by CRN",
        "operationId": "getOffenderContactSummariesByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "appointmentsOnly",
            "in": "query",
            "description": "appointmentsOnly",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "attended",
            "in": "query",
            "description": "attended",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "complied",
            "in": "query",
            "description": "complied",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "contactDateFrom",
            "in": "query",
            "description": "contactDateFrom",
            "required": false,
            "type": "string"
          },
          {
            "name": "contactDateTo",
            "in": "query",
            "description": "contactDateTo",
            "required": false,
            "type": "string"
          },
          {
            "name": "contactTypes",
            "in": "query",
            "description": "contactTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "convictionId",
            "in": "query",
            "description": "convictionId",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "CRN of the offender",
            "required": true,
            "type": "string",
            "x-example": "X123456"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": false,
            "type": "string"
          },
          {
            "name": "include",
            "in": "query",
            "description": "Contacts to include. Can be a contact type code, prefixed with 'type_' or appointments",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "nationalStandard",
            "in": "query",
            "description": "nationalStandard",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "outcome",
            "in": "query",
            "description": "outcome",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Page number (0-based)",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "x-example": 0
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Optional size of page",
            "required": false,
            "type": "integer",
            "default": 1000,
            "format": "int32",
            "x-example": 20
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfContactSummary"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender does not exist"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/contacts/{contactId}": {
      "get": {
        "tags": ["Contact and attendance"],
        "summary": "Gets offender contact summary by CRN & contact id",
        "operationId": "getOffenderContactSummaryByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactId",
            "in": "path",
            "description": "contactId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Contact with matching id and crn",
            "schema": {
              "$ref": "#/definitions/ContactSummary"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Contact or offender not found"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions": {
      "get": {
        "tags": ["-- Popular core APIs --", "Convictions", "Core offender"],
        "summary": "Return the convictions (AKA Delius Event) for an offender",
        "operationId": "getConvictionsForOffenderByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "retrieve only active convictions",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Conviction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions-with-rar": {
      "get": {
        "tags": ["-- Popular core APIs --", "Convictions", "Core offender"],
        "summary": "Return the convictions (AKA Delius Event) for an offender that contain RAR",
        "operationId": "getOffenderConvictionsWithRarByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Conviction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/active/nsis": {
      "get": {
        "tags": ["Core offender", "Sentence requirements and breach"],
        "summary": "Return all the NSIs for the CRN, active convictions only, filtering by NSI codes",
        "operationId": "getNsisForOffenderByCrnAndActiveConvictionsUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          },
          {
            "name": "nsiCodes",
            "in": "query",
            "description": "list of NSI codes to constrain by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NsiWrapper"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}": {
      "get": {
        "tags": ["-- Popular core APIs --", "Convictions", "Core offender"],
        "summary": "Return the conviction (AKA Delius Event) for a conviction ID and a CRN",
        "operationId": "getConvictionForOffenderByCrnAndConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "ID for the conviction / event",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 2500295345
          },
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Conviction"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN or conviction ID is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/attendances": {
      "get": {
        "tags": ["Contact and attendance"],
        "summary": "Return the attendances for a CRN and a conviction id where enforcement is flagged",
        "operationId": "getAttendancesUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attendances"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/attendancesFilter": {
      "get": {
        "tags": ["Contact and attendance"],
        "summary": "Return the attendances for a CRN and a conviction id, filtered.",
        "operationId": "getAttendancesByConvictionUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Attendances"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/courtAppearances": {
      "get": {
        "tags": ["Court appearances"],
        "summary": "Returns all court appearances associated with the CRN for the conviction ID.",
        "operationId": "getOffenderCourtAppearancesByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CourtAppearanceBasicWrapper"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/courtReports": {
      "get": {
        "tags": ["Court appearances", "Offender Court Reports"],
        "summary": "Return the CourtReports for an offender and a conviction ID",
        "operationId": "getOffenderCourtReportsByCrnAndConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CourtReportMinimal"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, the offender may have exclusions or restrictions in place preventing some users from viewing. Adopting the client scopes SCOPE_IGNORE_DELIUS_INCLUSIONS_ALWAYS and SCOPE_IGNORE_DELIUS_EXCLUSIONS_ALWAYS can bypass these restrictions."
          },
          "404": {
            "description": "The offender or conviction ID is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/licenceConditions": {
      "get": {
        "tags": ["Sentence requirements and breach"],
        "summary": "Returns the Licence Conditions for a conviction",
        "operationId": "getLicenceConditionsByConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/LicenceConditions"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/nsis": {
      "get": {
        "tags": ["Core offender", "Sentence requirements and breach"],
        "summary": "Return the NSIs for a conviction ID and a CRN, filtering by NSI codes",
        "operationId": "getNsiForOffenderByCrnAndConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "ID for the conviction / event",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 2500295345
          },
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          },
          {
            "name": "nsiCodes",
            "in": "query",
            "description": "list of NSI codes to constrain by",
            "required": true,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NsiWrapper"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/nsis/{nsiId}": {
      "get": {
        "tags": ["Convictions", "Core offender"],
        "summary": "Return an NSI by crn, convictionId and nsiId",
        "operationId": "getNsiByNsiIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "ID for the conviction / event",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 2500295345
          },
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          },
          {
            "name": "nsiId",
            "in": "path",
            "description": "ID for the nsi",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 2500295123
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Nsi"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/pssRequirements": {
      "get": {
        "tags": ["Sentence requirements and breach"],
        "summary": "Returns the Post Sentence Supervision Requirements for a conviction",
        "operationId": "getPssRequirementsByConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PssRequirements"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/requirements": {
      "get": {
        "tags": ["Sentence requirements and breach"],
        "summary": "Returns the requirements for a conviction",
        "operationId": "getRequirementsByConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "retrieve only active requirements",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ConvictionRequirements"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/convictions/{convictionId}/sentenceStatus": {
      "get": {
        "tags": ["Core offender"],
        "summary": "Return sentence and custodial status information by crn, convictionId.",
        "operationId": "getSentenceStatusByConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "ID for the conviction / event",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 2500295345
          },
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/SentenceStatus"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender CRN / conviction ID is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/courtReports/{courtReportId}": {
      "get": {
        "tags": ["Court appearances", "Offender Court Reports"],
        "summary": "Return the CourtReport for an offender and report ID",
        "operationId": "getOffenderCourtReportByCrnAndCourtReportIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "courtReportId",
            "in": "path",
            "description": "courtReportId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CourtReportMinimal"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, the offender may have exclusions or restrictions in place preventing some users from viewing. Adopting the client scopes SCOPE_IGNORE_DELIUS_INCLUSIONS_ALWAYS and SCOPE_IGNORE_DELIUS_EXCLUSIONS_ALWAYS can bypass these restrictions."
          },
          "404": {
            "description": "The offender or report is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/custody/convictionId/{convictionId}": {
      "get": {
        "tags": ["Custody"],
        "summary": "Gets the current custody record",
        "operationId": "getCustodyByConvictionIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "convictionId",
            "in": "path",
            "description": "convictionId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Either the requested offender was not found or the conviction associated the conviction id."
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/custody/keyDates": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a all custody key dates for the active custodial conviction",
        "operationId": "getAllCustodyKeyDateByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustodyKeyDate"
              }
            }
          },
          "400": {
            "description": "The the offender does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/custody/keyDates/{typeCode}": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a custody key date for the active custodial conviction",
        "operationId": "getCustodyKeyDateByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found or does not have the supplied key date type."
          }
        }
      },
      "put": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Adds or replaces a custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "putCustodyKeyDateByCrnUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "custodyKeyDate",
            "description": "custodyKeyDate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustodyKeyDate"
            }
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      },
      "delete": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Deletes the custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "deleteCustodyKeyDateByCrnUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be deleted from an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/documents/grouped": {
      "get": {
        "tags": ["Documents"],
        "summary": "Returns all documents' meta data for an offender by CRN",
        "operationId": "getOffenderDocumentsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "X340906"
          },
          {
            "name": "subtype",
            "in": "query",
            "description": "Optional filter for subtype within a type. Can only be used if type is also present<div>Supported sub-types are <ul>   <li>for type <b>COURT_REPORT_DOCUMENT</b>       <ul>           <li><b>PSR</b> - for Pre-Sentence Reports</li>       </ul>   </li></ul></div>",
            "required": false,
            "type": "string",
            "x-example": "PSR"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Optional filter for type<div>Supported types are <ul><li>OFFENDER_DOCUMENT</li><li>CONVICTION_DOCUMENT</li><li>CPSPACK_DOCUMENT</li><li>PRECONS_DOCUMENT</li><li>COURT_REPORT_DOCUMENT</li><li>INSTITUTION_REPORT_DOCUMENT</li><li>ADDRESS_ASSESSMENT_DOCUMENT</li><li>APPROVED_PREMISES_REFERRAL_DOCUMENT</li><li>ASSESSMENT_DOCUMENT</li><li>CASE_ALLOCATION_DOCUMENT</li><li>PERSONAL_CONTACT_DOCUMENT</li><li>REFERRAL_DOCUMENT</li><li>NSI_DOCUMENT</li><li>PERSONAL_CIRCUMSTANCE_DOCUMENT</li><li>UPW_APPOINTMENT_DOCUMENT</li><li>CONTACT_DOCUMENT</li></ul></div>",
            "required": false,
            "type": "string",
            "x-example": "COURT_REPORT_DOCUMENT"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderDocuments"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not Found. For example if the CRN is not known.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/documents/{documentId}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Returns the document contents meta data for a given document associated with an offender",
        "operationId": "getOffenderDocumentByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "X12345"
          },
          {
            "name": "documentId",
            "in": "path",
            "description": "Document Id",
            "required": true,
            "type": "string",
            "x-example": "12312322"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/identifiers": {
      "get": {
        "tags": ["Core offender"],
        "summary": "Return the identifiers for an offender using the crn",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderIdentifiersByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderIdentifiers"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/nomsNumber": {
      "put": {
        "tags": ["Custody"],
        "summary": "Updates the offender record with the NOMS number in UpdateOffenderNomsNumber",
        "operationId": "updateOffenderNomsNumberUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateOffenderNomsNumber",
            "description": "updateOffenderNomsNumber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOffenderNomsNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/IDs"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/personalCircumstances": {
      "get": {
        "tags": ["Personal circumstances"],
        "summary": "Return the personal circumstances for an offender using crn",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderPersonalCircumstancesByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PersonalCircumstances"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/personalContacts": {
      "get": {
        "tags": ["Core offender"],
        "summary": "Gets all offender personal contacts by CRN",
        "operationId": "getAllOffenderPersonalContactsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN of the offender",
            "required": true,
            "type": "string",
            "x-example": "X320741"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/PersonalContact"
              }
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/probationStatus": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender"],
        "summary": "Returns the probation status for the given crn",
        "operationId": "getOffenderProbationStatusByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ProbationStatusDetail"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender was not found"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/referral/end/context/{context}": {
      "post": {
        "tags": ["Referrals"],
        "summary": "Ends a NSI referral",
        "operationId": "endReferralContextLessUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "description": "Name identifying preprocessing applied to the request",
            "required": true,
            "type": "string",
            "x-example": "commissioned-rehabilitation-services"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "referralEndRequest",
            "description": "referralEndRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextlessReferralEndRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Updated",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/referral/start/context/{context}": {
      "post": {
        "tags": ["Referrals"],
        "summary": "Starts an NSI referral",
        "operationId": "startReferralContextLessUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "context",
            "in": "path",
            "description": "Name identifying preprocessing applied to the request",
            "required": true,
            "type": "string",
            "x-example": "commissioned-rehabilitation-services"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "referralStartRequest",
            "description": "referralStartRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextlessReferralStartRequest"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/registrations": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the registrations for an offender using the crn",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderRegistrationsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "retrieve only active registrations",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registrations"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/registrations/{registrationId}": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Returns a specific registration for an offender",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderRegistrationDetailsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "authenticated",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "authorities[0].authority",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "credentials",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "details",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "principal",
            "in": "query",
            "required": false,
            "type": "object"
          },
          {
            "name": "registrationId",
            "in": "path",
            "description": "registrationId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registration"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/release": {
      "get": {
        "tags": ["Convictions", "Core offender"],
        "summary": "Returns the latest recall and release details for an offender",
        "description": "Accepts an offender CRN in the format A999999",
        "operationId": "getLatestRecallAndReleaseForOffenderByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "X320741"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderLatestRecall"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/risk/mappa": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the MAPPA details for an offender using CRN",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderMappaDetailsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MappaDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden - requires ROLE_COMMUNITY",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/risk/resourcing/latest": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the resourcing details for an offender using CRN number. Typically this is allocated or retained requiring greater resourcing. This equates to the historic NPS/CRC split for low and high risk offenders",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderResourcingDetailsByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskResourcingDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden - requires ROLE_COMMUNITY",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/sentence/{sentenceId}/appointments": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Creates an Contact appointment",
        "operationId": "createAppointmentUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "appointmentCreateRequest",
            "description": "appointmentCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AppointmentCreateRequest"
            }
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentenceId",
            "in": "path",
            "description": "sentenceId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentCreateResponse"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "409": {
            "description": "Conflicts with another appointment"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/sentence/{sentenceId}/appointments/context/{contextName}": {
      "post": {
        "tags": ["Appointments"],
        "summary": "Creates an Contact appointment for a specified context",
        "operationId": "createAppointmentWithContextNameUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "contextlessAppointmentCreateRequest",
            "description": "contextlessAppointmentCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextlessAppointmentCreateRequest"
            }
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "Name identifying preprocessing applied to the request",
            "required": true,
            "type": "string",
            "x-example": "commissioned-rehabilitation-services"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentenceId",
            "in": "path",
            "description": "sentenceId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AppointmentCreateResponse"
            }
          },
          "201": {
            "description": "Created",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "409": {
            "description": "Conflicts with another appointment"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/sentences/{sentenceId}/notifications/context/{contextName}": {
      "post": {
        "tags": ["Contacts"],
        "summary": "Creates a Contact Log for a specified context",
        "operationId": "notifyWithContextNameUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "contextlessNotificationCreateRequest",
            "description": "contextlessNotificationCreateRequest",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ContextlessNotificationCreateRequest"
            }
          },
          {
            "name": "contextName",
            "in": "path",
            "description": "Name identifying preprocessing applied to the request",
            "required": true,
            "type": "string",
            "x-example": "commissioned-rehabilitation-services"
          },
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "sentenceId",
            "in": "path",
            "description": "sentenceId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "Notified",
            "schema": {
              "type": "string"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_INTERVENTIONS_UPDATE"
          },
          "409": {
            "description": "Conflicts with another appointment"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/tier/{tier}": {
      "post": {
        "tags": ["Assessments", "Core offender"],
        "summary": "Update offender tier. Requires ROLE_MANAGEMENT_TIER_UPDATE",
        "operationId": "updateTierUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "CRN for the offender",
            "required": true,
            "type": "string",
            "x-example": "A123456"
          },
          {
            "name": "tier",
            "in": "path",
            "description": "New tier",
            "required": true,
            "type": "string",
            "x-example": "A1",
            "enum": ["A0", "A1", "A2", "A3", "B0", "B1", "B2", "B3", "C0", "C1", "C2", "C3", "D0", "D1", "D2", "D3"]
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, requires ROLE_MANAGEMENT_TIER_UPDATE"
          },
          "404": {
            "description": "The offender CRN or Tier is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/user/{username}/userAccess": {
      "get": {
        "tags": ["Authentication and users", "Core offender"],
        "summary": "Reveals if the specified user can access details about the supplied offender",
        "operationId": "checkUserAccessByCrnUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "name": "username",
            "in": "path",
            "description": "username",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccessLimitation"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "User is restricted from access to offender",
            "schema": {
              "$ref": "#/definitions/AccessLimitation"
            }
          },
          "404": {
            "description": "No such offender, or no such User (see body for detail)"
          }
        }
      }
    },
    "/secure/offenders/crn/{crn}/userAccess": {
      "get": {
        "tags": ["Authentication and users", "Core offender"],
        "summary": "Reveals if the logged on user can access details about the supplied offender",
        "operationId": "checkUserAccessByCrnUsingGET_1",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/AccessLimitation"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "User is restricted from access to offender",
            "schema": {
              "$ref": "#/definitions/AccessLimitation"
            }
          },
          "404": {
            "description": "No such offender, or no such User (see body for detail)"
          }
        }
      }
    },
    "/secure/offenders/nextUpdate": {
      "get": {
        "tags": ["Events"],
        "summary": "Returns the next update for any offender. If none, will look for failed updates and set them in progress again",
        "description": "requires ROLE_COMMUNITY_EVENTS",
        "operationId": "getAndLockNextOffenderUpdateUsingGET",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderUpdate"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_EVENTS"
          },
          "404": {
            "description": "No updates found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "409": {
            "description": "Attempt to retrieve the latest update that is already in progress",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender"],
        "summary": "Return the details for an offender. If multiple offenders found the active one wll be returned",
        "operationId": "getOffenderDetailsUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "failOnDuplicate",
            "in": "query",
            "description": "Should fail if multiple offenders found regardless of status",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderDetailSummary"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "409": {
            "description": "Multiple offenders found in the same state ",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/all": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender"],
        "summary": "Returns the full offender detail for the given nomsNumber. If multiple offender found the active one will be returned",
        "operationId": "getOffenderDetailByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "failOnDuplicate",
            "in": "query",
            "description": "Should fail if multiple offenders found",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderDetail"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender is not found"
          },
          "409": {
            "description": "Multiple offenders found in the same state",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/allOffenderManagers": {
      "get": {
        "tags": ["-- Popular core APIs --", "Core offender", "Offender managers"],
        "summary": "Returns the current community and prison offender managers for an offender",
        "description": "Accepts a NOMIS offender nomsNumber in the format A9999AA",
        "operationId": "getAllOffenderManagersForOffenderUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "includeProbationAreaTeams",
            "in": "query",
            "description": "include teams on the ProbationArea records",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CommunityOrPrisonOffenderManager"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/bookingNumber/{bookingNumber}/custody/keyDates": {
      "post": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Replaces all key dates specified in body. Key dates are either added or replaced or deleted if absent (see ReplaceCustodyKeyDates for the list). The the custodial conviction must be active",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "replaceAllCustodyKeyDateByNomsNumberAndBookingNumberUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bookingNumber",
            "in": "path",
            "description": "bookingNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "replaceCustodyKeyDates",
            "description": "replaceCustodyKeyDates",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ReplaceCustodyKeyDates"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender or conviction was not found."
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/contacts": {
      "get": {
        "tags": ["Contact and attendance", "Core offender"],
        "summary": "Returns the contact details for an offender by NOMS number",
        "operationId": "getOffenderContactReportByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "contactTypes",
            "in": "query",
            "description": "contactTypes",
            "required": false,
            "type": "array",
            "items": {
              "type": "string"
            },
            "collectionFormat": "multi"
          },
          {
            "name": "from",
            "in": "query",
            "description": "from",
            "required": false,
            "type": "string"
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          },
          {
            "name": "to",
            "in": "query",
            "description": "to",
            "required": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Contact"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender does not exist"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/convictions": {
      "get": {
        "tags": ["-- Popular core APIs --", "Convictions", "Core offender"],
        "summary": "Return the convictions (AKA Delius Event) for an offender",
        "operationId": "getConvictionsForOffenderUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activeOnly",
            "in": "query",
            "description": "retrieve only active convictions",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "failOnDuplicate",
            "in": "query",
            "description": "Should fail if multiple offenders found regardless of status",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": true
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Conviction"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "409": {
            "description": "Multiple offenders found in the same state ",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/convictions/active/nsis/recall": {
      "get": {
        "tags": ["Core offender", "Sentence requirements and breach"],
        "summary": "Return all the recall NSIs for the noms number, active convictions only when licence has not expired",
        "operationId": "getRecallNsisForOffenderByNomsNumberAndActiveConvictionsUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "NOMS number for the offender",
            "required": true,
            "type": "string",
            "x-example": "A1234GH"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/NsiWrapper"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The offender NOMS number is not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/custody/bookingNumber": {
      "put": {
        "tags": ["Custody"],
        "summary": "Updates the associated custody record with booking number in UpdateCustodyBookingNumber",
        "operationId": "updateCustodyBookingNumberUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateCustodyBookingNumber",
            "description": "updateCustodyBookingNumber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustodyBookingNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "400": {
            "description": "The booking number custody request is invalid"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "Either the requested offender was not found or the conviction associated the sentence start date"
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/custody/bookingNumber/{bookingNumber}": {
      "get": {
        "tags": ["Custody"],
        "summary": "Gets the current custody record",
        "operationId": "getCustodyByBookNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bookingNumber",
            "in": "path",
            "description": "bookingNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Either the requested offender was not found or the conviction associated the booking number."
          }
        }
      },
      "put": {
        "tags": ["Custody"],
        "summary": "Updates the associated custody record with changes defined in UpdateCustody",
        "operationId": "updateCustodyUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "bookingNumber",
            "in": "path",
            "description": "bookingNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateCustody",
            "description": "updateCustody",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateCustody"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "400": {
            "description": "The custody request is invalid"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "Either the requested offender was not found or the conviction associated the booking number."
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/custody/keyDates": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets all custody key dates for the active custodial conviction",
        "operationId": "getAllCustodyKeyDateByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustodyKeyDate"
              }
            }
          },
          "400": {
            "description": "The the offender does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/custody/keyDates/{typeCode}": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a custody key date for the active custodial conviction",
        "operationId": "getCustodyKeyDateByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found or does not have the supplied key date type."
          }
        }
      },
      "put": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Adds or replaces a custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "putCustodyKeyDateByNomsNumberUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "custodyKeyDate",
            "description": "custodyKeyDate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustodyKeyDate"
            }
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      },
      "delete": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Deletes the custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "deleteCustodyKeyDateByNomsNumberUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Key date has been deleted"
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be deleted from an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/documents/grouped": {
      "get": {
        "tags": ["Documents"],
        "summary": "Returns all document's meta data for an offender by NOMS number",
        "description": "<div>Supported types are <ul><li>OFFENDER_DOCUMENT</li><li>CONVICTION_DOCUMENT</li><li>CPSPACK_DOCUMENT</li><li>PRECONS_DOCUMENT</li><li>COURT_REPORT_DOCUMENT</li><li>INSTITUTION_REPORT_DOCUMENT</li><li>ADDRESS_ASSESSMENT_DOCUMENT</li><li>APPROVED_PREMISES_REFERRAL_DOCUMENT</li><li>ASSESSMENT_DOCUMENT</li><li>CASE_ALLOCATION_DOCUMENT</li><li>PERSONAL_CONTACT_DOCUMENT</li><li>REFERRAL_DOCUMENT</li><li>NSI_DOCUMENT</li><li>PERSONAL_CIRCUMSTANCE_DOCUMENT</li><li>UPW_APPOINTMENT_DOCUMENT</li><li>CONTACT_DOCUMENT</li></ul></div>",
        "operationId": "getOffenderDocumentsByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          },
          {
            "name": "subtype",
            "in": "query",
            "description": "Optional filter for subtype within a type. Can only be used if type is also present<div>Supported sub-types are <ul>   <li>for type <b>COURT_REPORT_DOCUMENT</b>       <ul>           <li><b>PSR</b> - for Pre-Sentence Reports</li>       </ul>   </li></ul></div>",
            "required": false,
            "type": "string",
            "x-example": "PSR"
          },
          {
            "name": "type",
            "in": "query",
            "description": "Optional filter for type<div>Supported types are <ul><li>OFFENDER_DOCUMENT</li><li>CONVICTION_DOCUMENT</li><li>CPSPACK_DOCUMENT</li><li>PRECONS_DOCUMENT</li><li>COURT_REPORT_DOCUMENT</li><li>INSTITUTION_REPORT_DOCUMENT</li><li>ADDRESS_ASSESSMENT_DOCUMENT</li><li>APPROVED_PREMISES_REFERRAL_DOCUMENT</li><li>ASSESSMENT_DOCUMENT</li><li>CASE_ALLOCATION_DOCUMENT</li><li>PERSONAL_CONTACT_DOCUMENT</li><li>REFERRAL_DOCUMENT</li><li>NSI_DOCUMENT</li><li>PERSONAL_CIRCUMSTANCE_DOCUMENT</li><li>UPW_APPOINTMENT_DOCUMENT</li><li>CONTACT_DOCUMENT</li></ul></div>",
            "required": false,
            "type": "string",
            "x-example": "COURT_REPORT_DOCUMENT"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderDocuments"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/documents/{documentId}": {
      "get": {
        "tags": ["Documents"],
        "summary": "Returns the document contents meta data for a given document associated with an offender",
        "operationId": "getOffenderDocumentUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "documentId",
            "in": "path",
            "description": "Document Id",
            "required": true,
            "type": "string",
            "x-example": "12312322"
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Resource"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/identifiers": {
      "get": {
        "tags": ["Core offender"],
        "summary": "Return the identifiers for an offender using NOMS number",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderIdentifiersByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderIdentifiers"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/personalCircumstances": {
      "get": {
        "tags": ["Personal circumstances"],
        "summary": "Return the personal circumstances for an offender using noms number",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderPersonalCircumstancesByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PersonalCircumstances"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/prisonOffenderManager": {
      "put": {
        "tags": ["Core offender", "Offender managers"],
        "summary": "Allocates the prison offender manager for an offender in custody. This operation may also have a side affect of creating a Staff member if one matching the name does not already exist. An existing staff member can be used if the staff id is supplied.",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "allocatePrisonOffenderManagerByNomsNumberUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "prisonOffenderManager",
            "description": "prisonOffenderManager",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreatePrisonOffenderManager"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommunityOrPrisonOffenderManager"
            }
          },
          "400": {
            "description": "Staff id does belong to the probation area related prison institution"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, requires ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The offender or prison institution is not found"
          }
        }
      },
      "delete": {
        "tags": ["Core offender", "Offender managers"],
        "summary": "Deallocates the prison offender manager for an offender in custody. The POM is set back to its unallocated state",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "deallocatePrisonOffenderManagerByNomsNumberUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "The noms number must be passed in the URL"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, requires ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The offender is not found"
          },
          "409": {
            "description": "The offender does not have a POM to deallocate or the offender has multiple active noms numbers"
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/recalled": {
      "put": {
        "tags": ["Custody"],
        "summary": "Updates the associated offender with recall information and returns the custody record",
        "operationId": "offenderRecalledUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "recallNotification",
            "description": "recallNotification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OffenderRecalledNotification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found"
          },
          "409": {
            "description": "The requested offender did not have a single active event"
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/registrations": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the registrations for an offender using NOMS number",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderRegistrationsByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "failOnDuplicate",
            "in": "query",
            "description": "failOnDuplicate",
            "required": false,
            "type": "boolean",
            "default": false
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registrations"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "409": {
            "description": "Multiple offenders found in the same state ",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/release": {
      "get": {
        "tags": ["Convictions", "Core offender"],
        "summary": "Returns the latest recall and release details for an offender",
        "description": "Accepts a NOMIS offender nomsNumber in the format A9999AA",
        "operationId": "getLatestRecallAndReleaseForOffenderUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderLatestRecall"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/released": {
      "put": {
        "tags": ["Custody"],
        "summary": "Updates the associated offender with release information and returns the custody record",
        "operationId": "offenderReleasedUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "releasedNotification",
            "description": "releasedNotification",
            "required": true,
            "schema": {
              "$ref": "#/definitions/OffenderReleasedNotification"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Custody"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found"
          },
          "409": {
            "description": "The requested offender did not have a single active event"
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/responsibleOfficer/switch": {
      "put": {
        "tags": ["Core offender", "Offender managers"],
        "summary": "Sets the responsible officer for an offender to either the current prison offender manager to community offender manager. This will allow the responsible officer to be set to an unallocated offender manager",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "switchResponsibleOfficerUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "responsibleOfficerSwitch",
            "description": "responsibleOfficerSwitch",
            "required": true,
            "schema": {
              "$ref": "#/definitions/ResponsibleOfficerSwitch"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CommunityOrPrisonOffenderManager"
            }
          },
          "400": {
            "description": "Either set true for the prisoner offender manager or the community offender manager"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden, requires ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The offender is not found"
          },
          "409": {
            "description": "Cannot find a current RO for offender or Cannot find an active POM for offender or Cannot find an active COM for offender"
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/responsibleOfficers": {
      "get": {
        "tags": ["Core offender", "Offender managers"],
        "summary": "Return the responsible officer (RO) for an offender",
        "description": "Accepts a NOMIS offender nomsNumber in the format A9999AA",
        "operationId": "getResponsibleOfficersForOffenderUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "Current only",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": false
          },
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "Nomis number for the offender",
            "required": true,
            "type": "string",
            "x-example": "G9542VP"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ResponsibleOfficer"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/risk/mappa": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the MAPPA details for an offender using NOMS number",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderMappaDetailsByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/MappaDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden - requires ROLE_COMMUNITY",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{nomsNumber}/risk/resourcing/latest": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the resourcing details for an offender using NOMS number. Typically this is allocated or retained requiring greater resourcing. This equates to the historic NPS/CRC split for low and high risk offenders",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderResourcingDetailsByNomsNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "nomsNumber",
            "in": "path",
            "description": "nomsNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/RiskResourcingDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Forbidden - requires ROLE_COMMUNITY",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/nomsNumber/{originalNomsNumber}/nomsNumber": {
      "put": {
        "tags": ["Custody"],
        "summary": "Updates the offender record(s) with the new NOMS number in UpdateOffenderNomsNumber replacing the existing number.",
        "description": "In the very rare circumstances more than one offender is found with matching noms number, all will be updated and their identifiers returned.",
        "operationId": "replaceOffenderNomsNumberUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "originalNomsNumber",
            "in": "path",
            "description": "originalNomsNumber",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "updateOffenderNomsNumber",
            "description": "updateOffenderNomsNumber",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOffenderNomsNumber"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/IDs"
              }
            }
          },
          "400": {
            "description": "The new noms number is not present in request"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found"
          },
          "409": {
            "description": "The new noms number is assigned to an existing offender already"
          }
        }
      }
    },
    "/secure/offenders/offenderId/{offenderId}/custody/keyDates": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a all custody key dates for the active custodial conviction",
        "operationId": "getAllCustodyKeyDateByOffenderIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustodyKeyDate"
              }
            }
          },
          "400": {
            "description": "The the offender does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/offenderId/{offenderId}/custody/keyDates/{typeCode}": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a custody key date for the active custodial conviction",
        "operationId": "getCustodyKeyDateByOffenderIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found or does not have the supplied key date type."
          }
        }
      },
      "put": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Adds or replaces a custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "putCustodyKeyDateByOffenderIdUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "custodyKeyDate",
            "description": "custodyKeyDate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustodyKeyDate"
            }
          },
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      },
      "delete": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Deletes the custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "deleteCustodyKeyDateByOffenderIdUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Key date has been deleted"
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be deleted from an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/offenderId/{offenderId}/identifiers": {
      "get": {
        "tags": ["Core offender"],
        "summary": "Return the identifiers for an offender using offenderId",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderIdentifiersByOffenderIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/OffenderIdentifiers"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/offenderId/{offenderId}/personalCircumstances": {
      "get": {
        "tags": ["Personal circumstances"],
        "summary": "Return the personal circumstances for an offender using offenderId",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderPersonalCircumstancesByOffenderIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PersonalCircumstances"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/offenderId/{offenderId}/registrations": {
      "get": {
        "tags": ["Risks and Registrations"],
        "summary": "Return the registrations for an offender using offenderId",
        "description": "requires ROLE_COMMUNITY",
        "operationId": "getOffenderRegistrationsByOffenderIdUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderId",
            "in": "path",
            "description": "offenderId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Registrations"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Offender not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/primaryIdentifiers": {
      "get": {
        "tags": ["Core offender"],
        "summary": "Return pageable list of all offender identifiers that match the supplied filter",
        "operationId": "getOffenderIdsUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "activeDate",
            "in": "query",
            "description": "Filter by offenders that were active on the supplied date. Advised not to use this in conjunction with includeActiveOnly since that will effectively return offenders active of this supplied date and current date which is typically not what is required.",
            "required": false,
            "type": "string",
            "format": "date",
            "x-example": "2017-10-31"
          },
          {
            "name": "includeActiveOnly",
            "in": "query",
            "description": "Filter by offenders that are active, i.e. offenders on a sentence that probation has an interest in.",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "includeDeleted",
            "in": "query",
            "description": "Include deleted offenders",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "page",
            "in": "query",
            "description": "Results page you want to retrieve (0..N)",
            "required": false,
            "type": "integer",
            "default": 0,
            "format": "int32",
            "x-example": 0
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "size",
            "in": "query",
            "description": "Number of records per page.",
            "required": false,
            "type": "integer",
            "default": 10,
            "format": "int32",
            "x-example": 10
          },
          {
            "name": "sort",
            "in": "query",
            "description": "Sort column and direction. Multiple sort params allowed.",
            "required": false,
            "type": "string",
            "default": "crn,asc",
            "x-example": "crn,desc"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfPrimaryIdentifiers"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          }
        }
      }
    },
    "/secure/offenders/prisonBookingNumber/{prisonBookingNumber}/custody/keyDates": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a all custody key dates for the active custodial conviction",
        "operationId": "getAllCustodyKeyDateByPrisonBookingNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "prisonBookingNumber",
            "in": "path",
            "description": "prisonBookingNumber",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/CustodyKeyDate"
              }
            }
          },
          "400": {
            "description": "The the offender does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found."
          }
        }
      }
    },
    "/secure/offenders/prisonBookingNumber/{prisonBookingNumber}/custody/keyDates/{typeCode}": {
      "get": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Gets a custody key date for the related custodial conviction with the matching prison booking",
        "operationId": "getCustodyKeyDateByPrisonBookingNumberUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "prisonBookingNumber",
            "in": "path",
            "description": "prisonBookingNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be retrieved for an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The requested offender was not found or does not have the supplied key date type."
          }
        }
      },
      "put": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Adds or replaces a custody key date for the active custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "putCustodyKeyDateByPrisonBookingNumberUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "custodyKeyDate",
            "description": "custodyKeyDate",
            "required": true,
            "schema": {
              "$ref": "#/definitions/CreateCustodyKeyDate"
            }
          },
          {
            "name": "prisonBookingNumber",
            "in": "path",
            "description": "prisonBookingNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/CustodyKeyDate"
            }
          },
          "400": {
            "description": "The keyDate is not valid or a key date can not be added to an offender which does not have a single custody event"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested conviction with associated prison booking was not found."
          }
        }
      },
      "delete": {
        "tags": ["Custody", "Sentence dates"],
        "summary": "Deletes the custody key date for the associated custodial conviction",
        "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE",
        "operationId": "deleteCustodyKeyDateByPrisonBookingNumberUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "prisonBookingNumber",
            "in": "path",
            "description": "prisonBookingNumber",
            "required": true,
            "type": "string"
          },
          {
            "name": "typeCode",
            "in": "path",
            "description": "typeCode",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Key date has been deleted"
          },
          "400": {
            "description": "The keyDate is not valid"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          },
          "404": {
            "description": "The requested prison booking was not found."
          }
        }
      }
    },
    "/secure/offenders/update/{offenderDeltaId}": {
      "delete": {
        "tags": ["Events"],
        "summary": "Deletes an update of an offender previous retrieved by `/offenders/nextUpdate` ",
        "description": "requires ROLE_COMMUNITY_EVENTS",
        "operationId": "deleteOffenderUpdateUsingDELETE",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderDeltaId",
            "in": "path",
            "description": "offenderDeltaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_EVENTS"
          },
          "404": {
            "description": "Update not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/offenders/update/{offenderDeltaId}/markAsFailed": {
      "put": {
        "tags": ["Events"],
        "summary": "Mark an offender update as failed",
        "description": "requires ROLE_COMMUNITY_EVENTS",
        "operationId": "markAsFailedUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offenderDeltaId",
            "in": "path",
            "description": "offenderDeltaId",
            "required": true,
            "type": "integer",
            "format": "int64"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_EVENTS"
          },
          "404": {
            "description": "Update not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/probationAreas": {
      "get": {
        "tags": ["Reference data"],
        "summary": "Return probation areas",
        "description": "Accepts filtering to only return active areas",
        "operationId": "getProbationAreaCodesUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Restricts to active areas only",
            "required": false,
            "type": "boolean",
            "x-example": true
          },
          {
            "name": "excludeEstablishments",
            "in": "query",
            "description": "Restricts to areas that are providers, no prisons will be returned",
            "required": false,
            "type": "boolean",
            "x-example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfKeyValue"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/probationAreas/code/{code}/localDeliveryUnits": {
      "get": {
        "tags": ["Reference data"],
        "summary": "Return Local delivery units for a probation area",
        "description": "Accepts a probation area code",
        "operationId": "getLdusForProbationCodeUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Probation area code",
            "required": true,
            "type": "string",
            "x-example": "NO2"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfKeyValue"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/probationAreas/code/{code}/localDeliveryUnits/code/{lduCode}/teams": {
      "get": {
        "tags": ["Reference data"],
        "summary": "Return teams for a local delivery unit within a probation area",
        "description": "Accepts a probation area code and local delivery unit code",
        "operationId": "getTeamsForLduUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "code",
            "in": "path",
            "description": "Probation area code",
            "required": true,
            "type": "string",
            "x-example": "NO2"
          },
          {
            "name": "lduCode",
            "in": "path",
            "description": "Local delivery unit code",
            "required": true,
            "type": "string",
            "x-example": "NO2NPSA"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfKeyValue"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/probationAreas/localDeliveryUnits": {
      "get": {
        "tags": ["Reference data"],
        "summary": "Return Probation Areas and associated Local Delivery Units. Establishments are excluded.",
        "description": "Accepts filtering to only return active areas",
        "operationId": "getProbationAreasAndLocalDeliveryUnitsUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "active",
            "in": "query",
            "description": "Restricts to active areas only",
            "required": false,
            "type": "boolean",
            "x-example": true
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ProbationAreaWithLocalDeliveryUnits"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/referenceData/set/{set}": {
      "get": {
        "tags": ["Reference data"],
        "summary": "Return the reference data items for the given set",
        "operationId": "getReferenceDataUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "set",
            "in": "path",
            "description": "The set of reference data",
            "required": true,
            "type": "string",
            "x-example": "ADDITIONAL IDENTIFIER TYPE"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDataList"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Data set not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/referenceData/sets": {
      "get": {
        "tags": ["Reference data"],
        "summary": "Returns all available reference data sets",
        "description": "It is expected that this API will be used to assist developers in understanding the available set codes available for /secure/referenceData/set/{set} endpoint",
        "operationId": "getReferenceDataSetsUsingGET",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/ReferenceDataSets"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/smoketest/offenders/crn/{crn}/custody/reset": {
      "post": {
        "tags": ["Smoke test"],
        "summary": "Resets custody data to the state before a Delius offender record has been matched to a NOMIS record",
        "description": "Only used for smoke tests, not production ready",
        "operationId": "resetCustodySmokeTestDataUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_SMOKE_TEST"
          },
          "404": {
            "description": "Either the requested offender was not found or no active custodial sentences were found"
          }
        }
      }
    },
    "/secure/smoketest/offenders/crn/{crn}/details": {
      "post": {
        "tags": ["Smoke test"],
        "summary": "Updates the specified offenders details",
        "description": "Only used for smoke tests, not production ready",
        "operationId": "updateOffenderDetailsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "crn",
            "in": "path",
            "description": "crn",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "offenderDetails",
            "description": "offenderDetails",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UpdateOffenderDetails"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_SMOKE_TEST"
          },
          "404": {
            "description": "The requested offender was not found"
          }
        }
      }
    },
    "/secure/staff/list": {
      "post": {
        "tags": ["Staff"],
        "summary": "Returns a list of staff details for supplied usernames - POST version to allow large user lists.",
        "description": "staff details for supplied usernames",
        "operationId": "getStaffDetailsList",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "usernames",
            "description": "usernames",
            "required": true,
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/StaffDetails"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/staff/staffIdentifier/{staffIdentifier}": {
      "get": {
        "tags": ["Staff"],
        "summary": "Return details of a staff member including option user details",
        "description": "Accepts a Delius staff officer identifier",
        "operationId": "getStaffDetailsForStaffIdentifierUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "staffIdentifier",
            "in": "path",
            "description": "Delius officer identifier",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 123456
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaffDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/staff/staffIdentifier/{staffIdentifier}/managedOffenders": {
      "get": {
        "tags": ["Staff"],
        "summary": "Return list of of currently managed offenders for one responsible officer (RO)",
        "description": "Accepts a Delius staff officer identifier",
        "operationId": "getOffendersForResponsibleOfficerIdentifierUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "current",
            "in": "query",
            "description": "Current only",
            "required": false,
            "type": "boolean",
            "default": false,
            "x-example": false
          },
          {
            "name": "staffIdentifier",
            "in": "path",
            "description": "Delius officer identifier of the responsible officer",
            "required": true,
            "type": "integer",
            "format": "int64",
            "x-example": 123456
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/ManagedOffender"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/staff/username/{username}": {
      "get": {
        "tags": ["Staff"],
        "summary": "Return details of a staff member including user details",
        "description": "Accepts a Delius staff username",
        "operationId": "getStaffDetailsForUsernameUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "Delius username",
            "required": true,
            "type": "string",
            "x-example": "SheliaHancockNPS"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/StaffDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/staff/username/{username}/cases": {
      "get": {
        "tags": ["Staff"],
        "summary": "EXPERIMENTAL: Return list of of currently managed offenders, with RAR requirement and only a single active sentence",
        "description": "Accepts a Delius Username. No backward compatibility guaranteed - intended for the use of the Manage a Supervision service, behaviour or responses may be modified in the future.",
        "operationId": "getCasesUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "offset",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int64"
          },
          {
            "name": "paged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "pageNumber",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "type": "integer",
            "format": "int32"
          },
          {
            "name": "sort.sorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "sort.unsorted",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "unpaged",
            "in": "query",
            "required": false,
            "type": "boolean"
          },
          {
            "name": "username",
            "in": "path",
            "description": "Delius username",
            "required": true,
            "type": "string",
            "x-example": "SheliaHancockNPS"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/PageOfStaffCaseloadEntry"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "Not found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        }
      }
    },
    "/secure/teams/prisonOffenderManagers/create": {
      "post": {
        "tags": ["Custody"],
        "summary": "Creates teams in each prison for prison offender managers. For each team the Unallocated staff member will also be created. Only teams or staff that are missing will be created. This only needs to run once per environment or when a new prison is added to Delius",
        "operationId": "createMissingPrisonOffenderManagerTeamsUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/TeamCreationResult"
            }
          },
          "400": {
            "description": "The custody request is invalid"
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_CUSTODY_UPDATE"
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY_CUSTODY_UPDATE": []
          }
        ]
      }
    },
    "/secure/teams/{teamCode}/office-locations": {
      "get": {
        "tags": ["Teams"],
        "summary": "Determines all active office locations for the specified team",
        "operationId": "getAllOfficeLocationsUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "teamCode",
            "in": "path",
            "description": "Team code",
            "required": true,
            "type": "string",
            "x-example": "N07T01"
          }
        ],
        "responses": {
          "200": {
            "description": "All active office locations for the specified team",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/OfficeLocation"
              }
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY"
          },
          "404": {
            "description": "The specified team does not exist or is not active"
          },
          "500": {
            "description": "Unrecoverable error whilst processing request.",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY": []
          }
        ]
      }
    },
    "/secure/users/search/email/{email}/details": {
      "get": {
        "tags": ["Users"],
        "summary": "Find user details of a user held in Delius Identity (LDAP)",
        "operationId": "findUserByEmailUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "email",
            "in": "path",
            "description": "LDAP email address",
            "required": true,
            "type": "string",
            "x-example": "sheila.hancock@justice.gov.uk"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/UserDetails"
              }
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_USERS"
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY_USERS": []
          }
        ]
      }
    },
    "/secure/users/{username}/details": {
      "get": {
        "tags": ["Users"],
        "summary": "Find user details of a user held in Delius Identity (LDAP)",
        "operationId": "findUserUsingGET",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "LDAP username",
            "required": true,
            "type": "string",
            "x-example": "TESTUSERNPS"
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/UserDetails"
            }
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires any of ROLE_COMMUNITY_AUTH_INT,ROLE_COMMUNITY_USERS,ROLE_COMMUNITY_USERS_ROLES"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY_AUTH_INT,ROLE_COMMUNITY_USERS,ROLE_COMMUNITY_USERS_ROLES": []
          }
        ]
      }
    },
    "/secure/users/{username}/password": {
      "post": {
        "tags": ["Authentication and users"],
        "summary": "Change password a users (LDAP) account",
        "operationId": "changePasswordUsingPOST",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "authPassword",
            "description": "Password Credentials",
            "required": true,
            "schema": {
              "$ref": "#/definitions/AuthPassword"
            }
          },
          {
            "name": "username",
            "in": "path",
            "description": "LDAP username",
            "required": true,
            "type": "string",
            "x-example": "TESTUSERNPS"
          }
        ],
        "responses": {
          "200": {
            "description": "Password Changed"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_AUTH_INT"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY_AUTH_INT": []
          }
        ]
      }
    },
    "/secure/users/{username}/roles/{roleId}": {
      "put": {
        "tags": ["Users"],
        "summary": "Add a role to a user held in Delius Identity (LDAP)",
        "operationId": "addRoleUsingPUT",
        "consumes": ["application/json"],
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "roleId",
            "in": "path",
            "description": "Delius Role ID",
            "required": true,
            "type": "string",
            "x-example": "CWBT001"
          },
          {
            "name": "username",
            "in": "path",
            "description": "LDAP username",
            "required": true,
            "type": "string",
            "x-example": "TESTUSERNPS"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Invalid request",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          },
          "401": {
            "description": "JWT supplied invalid or absent"
          },
          "403": {
            "description": "Requires role ROLE_COMMUNITY_USERS_ROLES"
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/ErrorResponse"
            }
          }
        },
        "security": [
          {
            "ROLE_COMMUNITY_USERS_ROLES": []
          }
        ]
      }
    }
  },
  "definitions": {
    "AccessLimitation": {
      "type": "object",
      "required": ["userExcluded", "userRestricted"],
      "properties": {
        "exclusionMessage": {
          "type": "string"
        },
        "restrictionMessage": {
          "type": "string"
        },
        "userExcluded": {
          "type": "boolean"
        },
        "userRestricted": {
          "type": "boolean"
        }
      },
      "title": "AccessLimitation"
    },
    "AdditionalIdentifier": {
      "type": "object",
      "properties": {
        "additionalIdentifierId": {
          "type": "integer",
          "format": "int64",
          "example": 23456789,
          "description": "unique id of identifier"
        },
        "type": {
          "description": "identifier name and description",
          "$ref": "#/definitions/KeyValue"
        },
        "value": {
          "type": "string",
          "example": "X1234",
          "description": "value of identifier"
        }
      },
      "title": "AdditionalIdentifier",
      "description": "Additional Identifier. \nCurrent active values for the type are\n LIFN\tLifer Number\nOTHR\tOther Personal Identifier\nSPNC\tScottish/Old PNC Number\nNPNC\tVerified No PNC Date\nVISO\tViSOR Number\nPCRN\tOther Previous CRN\nIMMN\tImmigration Number\nYCRN\tYOT Identifier/CRN\nAPNC\tAdditional PNC\nURN\tCPS Unique Reference Number\nAI02\tPrevious Prison Number\nDOFF\tDuplicate Offender CRN\nNINO\tNational Insurance Number\nDNOMS\tDuplicate NOMIS Number\nFull list can be found calling \"/secure/referenceData/set/ADDITIONAL IDENTIFIER TYPE\""
    },
    "AdditionalSentence": {
      "type": "object",
      "properties": {
        "additionalSentenceId": {
          "type": "integer",
          "format": "int64",
          "example": 2500000001
        },
        "amount": {
          "type": "number",
          "example": 100.0
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "example": 14
        },
        "notes": {
          "type": "string",
          "example": "Some additional sentence notes"
        },
        "type": {
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "AdditionalSentence"
    },
    "Address": {
      "type": "object",
      "required": ["from"],
      "properties": {
        "addressNumber": {
          "type": "string",
          "example": 32
        },
        "buildingName": {
          "type": "string",
          "example": "HMPPS Digital Studio"
        },
        "county": {
          "type": "string",
          "example": "South Yorkshire"
        },
        "createdDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-11T13:00:00"
        },
        "district": {
          "type": "string",
          "example": "Sheffield City Centre"
        },
        "from": {
          "type": "string",
          "format": "date",
          "example": "2021-06-10"
        },
        "lastUpdatedDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-11T14:00:00"
        },
        "latestAssessmentDate": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-11T12:00:00"
        },
        "noFixedAbode": {
          "type": "boolean",
          "example": true
        },
        "notes": {
          "type": "string",
          "example": "Some address notes"
        },
        "postcode": {
          "type": "string",
          "example": "S3 7BS"
        },
        "status": {
          "$ref": "#/definitions/KeyValue"
        },
        "streetName": {
          "type": "string",
          "example": "Scotland Street"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "0123456789"
        },
        "to": {
          "type": "string",
          "format": "date",
          "example": "2021-07-10"
        },
        "town": {
          "type": "string",
          "example": "Sheffield"
        },
        "type": {
          "$ref": "#/definitions/KeyValue"
        },
        "typeVerified": {
          "type": "boolean",
          "example": true
        }
      },
      "title": "Address"
    },
    "AddressSummary": {
      "type": "object",
      "properties": {
        "addressNumber": {
          "type": "string",
          "example": 32
        },
        "buildingName": {
          "type": "string",
          "example": "HMPPS Digital Studio"
        },
        "county": {
          "type": "string",
          "example": "South Yorkshire"
        },
        "district": {
          "type": "string",
          "example": "Sheffield City Centre"
        },
        "postcode": {
          "type": "string",
          "example": "S3 7BS"
        },
        "streetName": {
          "type": "string",
          "example": "Scotland Street"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "0123456789"
        },
        "town": {
          "type": "string",
          "example": "Sheffield"
        }
      },
      "title": "AddressSummary"
    },
    "AllTeam": {
      "type": "object",
      "required": ["providerTeamId", "teamId"],
      "properties": {
        "borough": {
          "$ref": "#/definitions/KeyValue"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "district": {
          "$ref": "#/definitions/KeyValue"
        },
        "externalProvider": {
          "$ref": "#/definitions/KeyValue"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "localDeliveryUnit": {
          "$ref": "#/definitions/KeyValue"
        },
        "name": {
          "type": "string"
        },
        "providerTeamId": {
          "type": "integer",
          "format": "int64"
        },
        "scProvider": {
          "$ref": "#/definitions/KeyValue"
        },
        "teamId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AllTeam"
    },
    "AppointmentCreateRequest": {
      "type": "object",
      "required": [
        "appointmentEnd",
        "appointmentStart",
        "contactType",
        "notes",
        "officeLocationCode",
        "providerCode",
        "staffCode",
        "teamCode"
      ],
      "properties": {
        "appointmentEnd": {
          "type": "string",
          "format": "date-time"
        },
        "appointmentStart": {
          "type": "string",
          "format": "date-time"
        },
        "contactType": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "nsiId": {
          "type": "integer",
          "format": "int64"
        },
        "officeLocationCode": {
          "type": "string"
        },
        "providerCode": {
          "type": "string"
        },
        "rarActivity": {
          "type": "boolean"
        },
        "requirementId": {
          "type": "integer",
          "format": "int64"
        },
        "sensitive": {
          "type": "boolean"
        },
        "staffCode": {
          "type": "string"
        },
        "teamCode": {
          "type": "string"
        }
      },
      "title": "AppointmentCreateRequest"
    },
    "AppointmentCreateResponse": {
      "type": "object",
      "required": ["appointmentEnd", "appointmentId", "appointmentStart", "type", "typeDescription"],
      "properties": {
        "appointmentEnd": {
          "type": "string",
          "format": "date-time"
        },
        "appointmentId": {
          "type": "integer",
          "format": "int64"
        },
        "appointmentStart": {
          "type": "string",
          "format": "date-time"
        },
        "sensitive": {
          "type": "boolean"
        },
        "type": {
          "type": "string"
        },
        "typeDescription": {
          "type": "string"
        }
      },
      "title": "AppointmentCreateResponse"
    },
    "AppointmentDetail": {
      "type": "object",
      "required": ["officeLocation", "type"],
      "properties": {
        "appointmentEnd": {
          "type": "string",
          "format": "date-time",
          "example": "2021-05-25T11:00:00+01:00"
        },
        "appointmentId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "appointmentStart": {
          "type": "string",
          "format": "date-time",
          "example": "2021-05-25T10:00:00+01:00"
        },
        "notes": {
          "type": "string",
          "example": "Some interesting notes about the appointment."
        },
        "officeLocation": {
          "$ref": "#/definitions/OfficeLocation"
        },
        "outcome": {
          "$ref": "#/definitions/AppointmentOutcome"
        },
        "provider": {
          "$ref": "#/definitions/KeyValue"
        },
        "rarActivity": {
          "type": "boolean",
          "example": true
        },
        "requirement": {
          "$ref": "#/definitions/AppointmentRequirementDetail"
        },
        "sensitive": {
          "type": "boolean",
          "example": true
        },
        "staff": {
          "$ref": "#/definitions/StaffHuman"
        },
        "team": {
          "$ref": "#/definitions/KeyValue"
        },
        "type": {
          "$ref": "#/definitions/AppointmentType"
        }
      },
      "title": "AppointmentDetail"
    },
    "AppointmentOutcome": {
      "type": "object",
      "properties": {
        "attended": {
          "type": "boolean",
          "example": true
        },
        "code": {
          "type": "string",
          "example": "ABC123"
        },
        "complied": {
          "type": "boolean",
          "example": true
        },
        "description": {
          "type": "string",
          "example": "Some appointment outcome"
        },
        "hoursCredited": {
          "type": "number",
          "format": "double",
          "example": 1.5
        }
      },
      "title": "AppointmentOutcome"
    },
    "AppointmentRelocateRequest": {
      "type": "object",
      "required": ["officeLocationCode"],
      "properties": {
        "officeLocationCode": {
          "type": "string"
        }
      },
      "title": "AppointmentRelocateRequest"
    },
    "AppointmentRelocateResponse": {
      "type": "object",
      "required": ["appointmentId"],
      "properties": {
        "appointmentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AppointmentRelocateResponse"
    },
    "AppointmentRequirementDetail": {
      "type": "object",
      "properties": {
        "isActive": {
          "type": "boolean",
          "example": true
        },
        "isRar": {
          "type": "boolean",
          "example": true
        },
        "requirementId": {
          "type": "integer",
          "format": "int64",
          "example": 25000000
        }
      },
      "title": "AppointmentRequirementDetail"
    },
    "AppointmentRescheduleResponse": {
      "type": "object",
      "required": ["appointmentId"],
      "properties": {
        "appointmentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AppointmentRescheduleResponse"
    },
    "AppointmentType": {
      "type": "object",
      "properties": {
        "contactType": {
          "type": "string",
          "example": "CHVS"
        },
        "description": {
          "type": "string",
          "example": "Home Visit to Case (NS)"
        },
        "nationalStandard": {
          "type": "boolean"
        },
        "orderTypes": {
          "type": "array",
          "example": ["LEGACY", "CJA"],
          "items": {
            "type": "string",
            "enum": ["CJA", "LEGACY"]
          }
        },
        "requiresLocation": {
          "type": "string",
          "example": "REQUIRED",
          "enum": ["NOT_REQUIRED", "OPTIONAL", "REQUIRED"]
        }
      },
      "title": "AppointmentType"
    },
    "AppointmentUpdateResponse": {
      "type": "object",
      "required": ["appointmentId"],
      "properties": {
        "appointmentId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "AppointmentUpdateResponse"
    },
    "Appointments": {
      "type": "object",
      "properties": {
        "acceptableAbsences": {
          "type": "integer",
          "format": "int64",
          "description": "Number of appointments recorded to date as not attended and compliant - i.e. with an acceptable reason for absence"
        },
        "attended": {
          "type": "integer",
          "format": "int64",
          "description": "Number of appointments recorded to date as attended"
        },
        "noOutcomeRecorded": {
          "type": "integer",
          "format": "int64",
          "description": "Number of appointments to date where no attendance or compliance information has been recorded"
        },
        "total": {
          "type": "integer",
          "format": "int64",
          "description": "Total number of appointments to date"
        },
        "unacceptableAbsences": {
          "type": "integer",
          "format": "int64",
          "description": "Number of appointments recorded to date as not attended and uncompliant - i.e. without an acceptable reason for absence"
        }
      },
      "title": "Appointments"
    },
    "Attendance": {
      "type": "object",
      "required": ["attendanceDate", "attended", "complied", "contactId"],
      "properties": {
        "attendanceDate": {
          "type": "string",
          "format": "date"
        },
        "attended": {
          "type": "boolean"
        },
        "complied": {
          "type": "boolean"
        },
        "contactId": {
          "type": "integer",
          "format": "int64"
        },
        "contactType": {
          "$ref": "#/definitions/ContactTypeDetail"
        },
        "outcome": {
          "type": "string"
        }
      },
      "title": "Attendance"
    },
    "Attendances": {
      "type": "object",
      "properties": {
        "attendances": {
          "type": "array",
          "description": "List of Attendances",
          "items": {
            "$ref": "#/definitions/Attendance"
          }
        }
      },
      "title": "Attendances",
      "description": "Attendance Wrapper"
    },
    "AuthPassword": {
      "type": "object",
      "required": ["password"],
      "properties": {
        "password": {
          "type": "string",
          "example": "password123456",
          "description": "LDAP password"
        }
      },
      "title": "AuthPassword",
      "description": "Password Credentials"
    },
    "AuthUser": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "password": {
          "type": "string",
          "example": "password123456",
          "description": "LDAP password"
        },
        "username": {
          "type": "string",
          "example": "TEST_USER_NPS",
          "description": "LDAP username"
        }
      },
      "title": "AuthUser",
      "description": "Authentication Details"
    },
    "CommunityOrPrisonOffenderManager": {
      "type": "object",
      "properties": {
        "fromDate": {
          "type": "string",
          "format": "date",
          "example": "2019-12-04",
          "description": "Date since the offender manager was assigned"
        },
        "isPrisonOffenderManager": {
          "type": "boolean",
          "example": true,
          "description": "True if this offender manager is the prison OM else False"
        },
        "isResponsibleOfficer": {
          "type": "boolean",
          "example": true,
          "description": "True if this offender manager is the current responsible officer"
        },
        "isUnallocated": {
          "type": "boolean",
          "example": true,
          "description": "True if no real offender manager has been allocated and this is just a placeholder"
        },
        "probationArea": {
          "description": "Probation area / prison institution for this OM",
          "$ref": "#/definitions/ProbationArea"
        },
        "staff": {
          "description": "staff name and contact details",
          "$ref": "#/definitions/ContactableHuman"
        },
        "staffCode": {
          "type": "string",
          "example": "CHSE755",
          "description": "Staff code"
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 123455,
          "description": "Staff id"
        },
        "team": {
          "description": "Team details for this offender manager",
          "$ref": "#/definitions/Team"
        }
      },
      "title": "CommunityOrPrisonOffenderManager"
    },
    "Contact": {
      "type": "object",
      "required": ["contactId", "contactType"],
      "properties": {
        "alertActive": {
          "type": "boolean"
        },
        "attended": {
          "type": "boolean"
        },
        "complied": {
          "type": "boolean"
        },
        "contactEndTime": {
          "type": "object",
          "example": "13:00:00"
        },
        "contactId": {
          "type": "integer",
          "format": "int64"
        },
        "contactOutcomeType": {
          "$ref": "#/definitions/KeyValue"
        },
        "contactStartTime": {
          "type": "object",
          "example": "12:00:00"
        },
        "contactType": {
          "$ref": "#/definitions/ContactType"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "documentLinked": {
          "type": "boolean"
        },
        "eventId": {
          "type": "integer",
          "format": "int64"
        },
        "explanation": {
          "$ref": "#/definitions/KeyValue"
        },
        "hoursCredited": {
          "type": "number",
          "format": "double"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "licenceCondition": {
          "$ref": "#/definitions/LicenceCondition"
        },
        "linkedContactId": {
          "type": "integer",
          "format": "int64"
        },
        "notes": {
          "type": "string"
        },
        "nsi": {
          "$ref": "#/definitions/Nsi"
        },
        "partitionArea": {
          "type": "string"
        },
        "probationArea": {
          "$ref": "#/definitions/KeyValue"
        },
        "providerEmployee": {
          "$ref": "#/definitions/Human"
        },
        "providerLocation": {
          "$ref": "#/definitions/KeyValue"
        },
        "providerTeam": {
          "$ref": "#/definitions/KeyValue"
        },
        "requirement": {
          "$ref": "#/definitions/Requirement"
        },
        "softDeleted": {
          "type": "boolean"
        },
        "staff": {
          "$ref": "#/definitions/StaffHuman"
        },
        "team": {
          "$ref": "#/definitions/KeyValue"
        },
        "uploadLinked": {
          "type": "boolean"
        },
        "visorContact": {
          "type": "boolean"
        }
      },
      "title": "Contact"
    },
    "ContactDetails": {
      "type": "object",
      "properties": {
        "addresses": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Address"
          }
        },
        "allowSMS": {
          "type": "boolean"
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        }
      },
      "title": "ContactDetails"
    },
    "ContactDetailsSummary": {
      "type": "object",
      "properties": {
        "allowSMS": {
          "type": "boolean"
        },
        "emailAddresses": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "phoneNumbers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PhoneNumber"
          }
        }
      },
      "title": "ContactDetailsSummary"
    },
    "ContactSummary": {
      "type": "object",
      "required": ["contactId", "provider", "staff", "team", "type"],
      "properties": {
        "contactEnd": {
          "type": "string",
          "format": "date-time",
          "example": "2021-05-25T11:00:00+01:00"
        },
        "contactId": {
          "type": "integer",
          "format": "int64"
        },
        "contactStart": {
          "type": "string",
          "format": "date-time",
          "example": "2021-05-25T10:00:00+01:00"
        },
        "lastUpdatedByUser": {
          "$ref": "#/definitions/Human"
        },
        "lastUpdatedDateTime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-05-25T10:00:00+01:00"
        },
        "notes": {
          "type": "string"
        },
        "officeLocation": {
          "$ref": "#/definitions/OfficeLocation"
        },
        "outcome": {
          "$ref": "#/definitions/AppointmentOutcome"
        },
        "provider": {
          "$ref": "#/definitions/KeyValue"
        },
        "rarActivity": {
          "type": "boolean",
          "example": true
        },
        "sensitive": {
          "type": "boolean",
          "example": true
        },
        "staff": {
          "$ref": "#/definitions/StaffHuman"
        },
        "team": {
          "$ref": "#/definitions/KeyValue"
        },
        "type": {
          "$ref": "#/definitions/ContactType"
        }
      },
      "title": "ContactSummary"
    },
    "ContactType": {
      "type": "object",
      "required": ["code", "description"],
      "properties": {
        "appointment": {
          "type": "boolean"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "nationalStandard": {
          "type": "boolean"
        },
        "shortDescription": {
          "type": "string"
        }
      },
      "title": "ContactType"
    },
    "ContactTypeDetail": {
      "type": "object",
      "required": ["code", "description"],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      },
      "title": "ContactTypeDetail"
    },
    "ContactableHuman": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "officer@gov.uk",
          "description": "Email address"
        },
        "forenames": {
          "type": "string",
          "example": "Sheila Linda",
          "description": "Given names"
        },
        "phoneNumber": {
          "type": "string",
          "example": "0123411278",
          "description": "Phone number"
        },
        "surname": {
          "type": "string",
          "example": "Hancock",
          "description": "Family name"
        }
      },
      "title": "ContactableHuman"
    },
    "ContextlessAppointmentCreateRequest": {
      "type": "object",
      "required": [
        "appointmentEnd",
        "appointmentStart",
        "contractType",
        "countsTowardsRarDays",
        "notes",
        "referralStart"
      ],
      "properties": {
        "appointmentEnd": {
          "type": "string",
          "format": "date-time"
        },
        "appointmentStart": {
          "type": "string",
          "format": "date-time"
        },
        "contractType": {
          "type": "string"
        },
        "countsTowardsRarDays": {
          "type": "boolean"
        },
        "notes": {
          "type": "string"
        },
        "officeLocationCode": {
          "type": "string"
        },
        "referralId": {
          "type": "string",
          "format": "uuid"
        },
        "referralStart": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ContextlessAppointmentCreateRequest"
    },
    "ContextlessAppointmentOutcomeRequest": {
      "type": "object",
      "required": ["attended", "notes", "notifyPPOfAttendanceBehaviour"],
      "properties": {
        "attended": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "notifyPPOfAttendanceBehaviour": {
          "type": "boolean"
        }
      },
      "title": "ContextlessAppointmentOutcomeRequest"
    },
    "ContextlessAppointmentRescheduleRequest": {
      "type": "object",
      "required": ["initiatedByServiceProvider", "updatedAppointmentEnd", "updatedAppointmentStart"],
      "properties": {
        "initiatedByServiceProvider": {
          "type": "boolean"
        },
        "officeLocationCode": {
          "type": "string"
        },
        "updatedAppointmentEnd": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAppointmentStart": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ContextlessAppointmentRescheduleRequest"
    },
    "ContextlessNotificationCreateRequest": {
      "type": "object",
      "required": ["contactDateTime", "contractType", "notes", "referralStart"],
      "properties": {
        "contactDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "contractType": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "referralId": {
          "type": "string",
          "format": "uuid"
        },
        "referralStart": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ContextlessNotificationCreateRequest"
    },
    "ContextlessReferralEndRequest": {
      "type": "object",
      "required": ["contractType", "endType", "endedAt", "notes", "sentenceId", "startedAt"],
      "properties": {
        "contractType": {
          "type": "string",
          "example": "PWB",
          "description": "Denotes a group of services delivered through a referral to a service user, e.g. Personal Well Being"
        },
        "endType": {
          "type": "string"
        },
        "endedAt": {
          "type": "string",
          "format": "date-time"
        },
        "notes": {
          "type": "string"
        },
        "referralId": {
          "type": "string",
          "format": "uuid"
        },
        "sentenceId": {
          "type": "integer",
          "format": "int64"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ContextlessReferralEndRequest"
    },
    "ContextlessReferralStartRequest": {
      "type": "object",
      "required": ["contractType", "notes", "sentenceId", "startedAt"],
      "properties": {
        "contractType": {
          "type": "string",
          "example": "PWB",
          "description": "Denotes a group of services delivered through a referral to a service user, e.g. Personal Well Being"
        },
        "notes": {
          "type": "string"
        },
        "referralId": {
          "type": "string",
          "format": "uuid"
        },
        "sentenceId": {
          "type": "integer",
          "format": "int64"
        },
        "startedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "ContextlessReferralStartRequest"
    },
    "Conviction": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "example": true
        },
        "awaitingPsr": {
          "type": "boolean",
          "example": true
        },
        "breachEnd": {
          "type": "string",
          "format": "date",
          "example": "2021-05-13"
        },
        "convictionDate": {
          "type": "string",
          "format": "date",
          "example": "2021-06-10"
        },
        "convictionId": {
          "type": "integer",
          "format": "int64",
          "example": 2500000001
        },
        "courtAppearance": {
          "$ref": "#/definitions/CourtAppearanceBasic"
        },
        "custody": {
          "$ref": "#/definitions/Custody"
        },
        "failureToComplyCount": {
          "type": "integer",
          "format": "int64",
          "example": 3
        },
        "inBreach": {
          "type": "boolean",
          "example": true
        },
        "index": {
          "type": "string",
          "example": 1
        },
        "latestCourtAppearanceOutcome": {
          "$ref": "#/definitions/KeyValue"
        },
        "offences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Offence"
          }
        },
        "referralDate": {
          "type": "string",
          "format": "date",
          "example": "2021-06-10"
        },
        "responsibleCourt": {
          "$ref": "#/definitions/Court"
        },
        "sentence": {
          "$ref": "#/definitions/Sentence"
        }
      },
      "title": "Conviction"
    },
    "ConvictionDocuments": {
      "type": "object",
      "properties": {
        "convictionId": {
          "type": "string"
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OffenderDocumentDetail"
          }
        }
      },
      "title": "ConvictionDocuments"
    },
    "ConvictionRequirements": {
      "type": "object",
      "properties": {
        "requirements": {
          "type": "array",
          "description": "List of requirements associated with this conviction",
          "items": {
            "$ref": "#/definitions/Requirement"
          }
        }
      },
      "title": "ConvictionRequirements"
    },
    "Court": {
      "type": "object",
      "properties": {
        "buildingName": {
          "type": "string",
          "example": "Sheffield Magistrates Court"
        },
        "code": {
          "type": "string",
          "example": "SHEFMC"
        },
        "country": {
          "type": "string",
          "example": "England"
        },
        "county": {
          "type": "string",
          "example": "South Yorkshire"
        },
        "courtId": {
          "type": "integer",
          "format": "int64",
          "example": 2500000001
        },
        "courtName": {
          "type": "string",
          "example": "Sheffield Magistrates Court"
        },
        "courtType": {
          "$ref": "#/definitions/KeyValue"
        },
        "courtTypeId": {
          "type": "integer",
          "format": "int64",
          "example": 310
        },
        "createdDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2014-05-29T21:50:16"
        },
        "fax": {
          "type": "string",
          "example": "0114 2756 373"
        },
        "lastUpdatedDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2014-05-29T21:50:16"
        },
        "locality": {
          "type": "string",
          "example": "Sheffield City Centre"
        },
        "postcode": {
          "type": "string",
          "example": "S3 8LU"
        },
        "probationArea": {
          "$ref": "#/definitions/KeyValue"
        },
        "probationAreaId": {
          "type": "integer",
          "format": "int64",
          "example": 1500001001
        },
        "secureEmailAddress": {
          "type": "string",
          "example": "example@example.com"
        },
        "selectable": {
          "type": "boolean",
          "example": true
        },
        "street": {
          "type": "string",
          "example": "Castle Street"
        },
        "telephoneNumber": {
          "type": "string",
          "example": "0300 047 0777"
        },
        "town": {
          "type": "string",
          "example": "Sheffield"
        }
      },
      "title": "Court"
    },
    "CourtAppearanceBasic": {
      "type": "object",
      "properties": {
        "appearanceDate": {
          "type": "string",
          "format": "date-time",
          "example": "2019-09-04T00:00:00"
        },
        "appearanceType": {
          "$ref": "#/definitions/KeyValue"
        },
        "courtAppearanceId": {
          "type": "integer",
          "format": "int64",
          "example": 2500000001
        },
        "courtCode": {
          "type": "string",
          "example": "SHEFMC"
        },
        "courtName": {
          "type": "string",
          "example": "Sheffield Magistrates Court"
        },
        "crn": {
          "type": "string"
        }
      },
      "title": "CourtAppearanceBasic"
    },
    "CourtAppearanceBasicWrapper": {
      "type": "object",
      "properties": {
        "courtAppearances": {
          "type": "array",
          "description": "List of court appearances",
          "items": {
            "$ref": "#/definitions/CourtAppearanceBasic"
          }
        }
      },
      "title": "CourtAppearanceBasicWrapper",
      "description": "Court appearance list Wrapper"
    },
    "CourtAppearanceMinimal": {
      "type": "object",
      "properties": {
        "appearanceDate": {
          "type": "string",
          "format": "date-time"
        },
        "appearanceType": {
          "$ref": "#/definitions/KeyValue"
        },
        "courtAppearanceId": {
          "type": "integer",
          "format": "int64"
        },
        "courtCode": {
          "type": "string"
        },
        "courtName": {
          "type": "string"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "CourtAppearanceMinimal"
    },
    "CourtAppearanceMinimalWrapper": {
      "type": "object",
      "properties": {
        "courtAppearances": {
          "type": "array",
          "description": "List of court appearances",
          "items": {
            "$ref": "#/definitions/CourtAppearanceMinimal"
          }
        }
      },
      "title": "CourtAppearanceMinimalWrapper",
      "description": "Court appearance list Wrapper"
    },
    "CourtReportMinimal": {
      "type": "object",
      "properties": {
        "allocationDate": {
          "type": "string",
          "format": "date-time"
        },
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "courtReportId": {
          "type": "integer",
          "format": "int64"
        },
        "courtReportType": {
          "$ref": "#/definitions/KeyValue"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64"
        },
        "receivedByCourtDate": {
          "type": "string",
          "format": "date-time"
        },
        "reportManagers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ReportManager"
          }
        },
        "requestedDate": {
          "type": "string",
          "format": "date-time"
        },
        "requiredDate": {
          "type": "string",
          "format": "date-time"
        },
        "sentToCourtDate": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "CourtReportMinimal"
    },
    "CreateCustodyKeyDate": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "CreateCustodyKeyDate"
    },
    "CreatePrisonOffenderManager": {
      "type": "object",
      "required": ["nomsPrisonInstitutionCode"],
      "properties": {
        "nomsPrisonInstitutionCode": {
          "type": "string",
          "example": "MDI",
          "description": "Prison institution code in NOMIS"
        },
        "officer": {
          "example": "officer: {\"forenames\": \"John\", \"surname\": \"Smith\" }",
          "description": "Name and contact details of offender manager. If passed then must contain both forename(s) and surname",
          "$ref": "#/definitions/ContactableHuman"
        },
        "staffId": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "description": "Officer staff ID. If not present officer will be used to lookup staff member"
        }
      },
      "title": "CreatePrisonOffenderManager",
      "description": "Request body for assigning an offender manager to an offender. Must pass exactly one of officer / officerCode (not both)"
    },
    "Custody": {
      "type": "object",
      "properties": {
        "bookingNumber": {
          "type": "string",
          "example": "V74111",
          "description": "Human readable id of the prison booking, AKA book number"
        },
        "institution": {
          "description": "Institution where the offender currently resides",
          "$ref": "#/definitions/Institution"
        },
        "keyDates": {
          "description": "Key sentence dates of particular interest to custody",
          "$ref": "#/definitions/CustodyRelatedKeyDates"
        },
        "sentenceStartDate": {
          "type": "string",
          "format": "date",
          "description": "Date when related sentence started"
        },
        "status": {
          "description": "Custodial status",
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "Custody"
    },
    "CustodyKeyDate": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date"
        },
        "type": {
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "CustodyKeyDate"
    },
    "CustodyRelatedKeyDates": {
      "type": "object",
      "properties": {
        "conditionalReleaseDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Conditional release date"
        },
        "expectedPrisonOffenderManagerHandoverDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Expected actual handover date from prison offender manager to community offender manager"
        },
        "expectedPrisonOffenderManagerHandoverStartDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Expected start date of the handover process from prison offender manager to community offender manager"
        },
        "expectedReleaseDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Expected release date"
        },
        "hdcEligibilityDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Home detention curfew eligibility date"
        },
        "licenceExpiryDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Licence expiry date"
        },
        "paroleEligibilityDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Parole eligibility date"
        },
        "postSentenceSupervisionEndDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Post sentence Supervision end date. AKA Top-up supervision end date"
        },
        "sentenceExpiryDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Sentence expiry date"
        }
      },
      "title": "CustodyRelatedKeyDates",
      "description": "Key sentence dates that are related to their time in custody"
    },
    "Disability": {
      "type": "object",
      "properties": {
        "disabilityId": {
          "type": "integer",
          "format": "int64"
        },
        "disabilityType": {
          "$ref": "#/definitions/KeyValue"
        },
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "notes": {
          "type": "string"
        },
        "provisions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Provision"
          }
        },
        "startDate": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "Disability"
    },
    "ErrorResponse": {
      "type": "object",
      "required": ["status"],
      "properties": {
        "developerMessage": {
          "type": "string",
          "example": "Surname required",
          "description": "Reason for error"
        },
        "status": {
          "type": "integer",
          "format": "int32",
          "example": 400,
          "description": "Http status code"
        }
      },
      "title": "ErrorResponse"
    },
    "Human": {
      "type": "object",
      "properties": {
        "forenames": {
          "type": "string",
          "example": "Sheila Linda",
          "description": "Given names"
        },
        "surname": {
          "type": "string",
          "example": "Hancock",
          "description": "Family name"
        }
      },
      "title": "Human"
    },
    "IDs": {
      "type": "object",
      "required": ["crn"],
      "properties": {
        "crn": {
          "type": "string",
          "example": "12345C",
          "description": "case reference number"
        },
        "croNumber": {
          "type": "string",
          "example": "123456/04A",
          "description": "Number from the crime records office"
        },
        "immigrationNumber": {
          "type": "string",
          "example": "A1234567",
          "description": "Immigration number"
        },
        "mostRecentPrisonerNumber": {
          "type": "string",
          "example": "G12345",
          "description": "Book number of latest booking from NOMIS"
        },
        "niNumber": {
          "type": "string",
          "example": "AA112233B",
          "description": "National insurance number from HMRC"
        },
        "nomsNumber": {
          "type": "string",
          "example": "A1234CR",
          "description": "Offender number from NOMIS"
        },
        "pncNumber": {
          "type": "string",
          "example": "2004/0712343H",
          "description": "Number from the police national computer"
        }
      },
      "title": "IDs"
    },
    "InputStream": {
      "type": "object",
      "title": "InputStream"
    },
    "Institution": {
      "type": "object",
      "required": ["institutionId"],
      "properties": {
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "establishmentType": {
          "$ref": "#/definitions/KeyValue"
        },
        "institutionId": {
          "type": "integer",
          "format": "int64"
        },
        "institutionName": {
          "type": "string"
        },
        "isEstablishment": {
          "type": "boolean"
        },
        "isPrivate": {
          "type": "boolean"
        },
        "nomsPrisonInstitutionCode": {
          "type": "string",
          "description": "Prison institution code in NOMIS"
        }
      },
      "title": "Institution"
    },
    "KeyValue": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "ABC123"
        },
        "description": {
          "type": "string",
          "example": "Some description"
        }
      },
      "title": "KeyValue"
    },
    "LicenceCondition": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "commencementDate": {
          "type": "string",
          "format": "date"
        },
        "commencementNotes": {
          "type": "string"
        },
        "createdDateTime": {
          "type": "string",
          "format": "date-time"
        },
        "licenceConditionNotes": {
          "type": "string"
        },
        "licenceConditionTypeMainCat": {
          "$ref": "#/definitions/KeyValue"
        },
        "licenceConditionTypeSubCat": {
          "$ref": "#/definitions/KeyValue"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "type": "string",
          "format": "date"
        },
        "terminationNotes": {
          "type": "string"
        }
      },
      "title": "LicenceCondition"
    },
    "LicenceConditions": {
      "type": "object",
      "properties": {
        "licenceConditions": {
          "type": "array",
          "description": "List of licenceConditions associated with this conviction",
          "items": {
            "$ref": "#/definitions/LicenceCondition"
          }
        }
      },
      "title": "LicenceConditions"
    },
    "LocalDeliveryUnit": {
      "type": "object",
      "required": ["localDeliveryUnitId"],
      "properties": {
        "code": {
          "type": "string",
          "example": "N01KSCT",
          "description": "LDU code"
        },
        "description": {
          "type": "string",
          "example": "NPS Manchester City South",
          "description": "description"
        },
        "localDeliveryUnitId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "LocalDeliveryUnit"
    },
    "LocalTime": {
      "type": "object",
      "properties": {
        "hour": {
          "type": "integer",
          "format": "int32"
        },
        "minute": {
          "type": "integer",
          "format": "int32"
        },
        "nano": {
          "type": "integer",
          "format": "int32"
        },
        "second": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "LocalTime"
    },
    "ManagedOffender": {
      "type": "object",
      "required": [
        "crnNumber",
        "nomsNumber",
        "offenderId",
        "offenderSurname",
        "omEndDate",
        "omStartDate",
        "staffCode",
        "staffIdentifier"
      ],
      "properties": {
        "crnNumber": {
          "type": "string"
        },
        "currentOm": {
          "type": "boolean"
        },
        "currentPom": {
          "type": "boolean"
        },
        "currentRo": {
          "type": "boolean"
        },
        "nomsNumber": {
          "type": "string"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64"
        },
        "offenderSurname": {
          "type": "string"
        },
        "omEndDate": {
          "type": "string",
          "format": "date"
        },
        "omStartDate": {
          "type": "string",
          "format": "date"
        },
        "staffCode": {
          "type": "string"
        },
        "staffIdentifier": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ManagedOffender"
    },
    "MappaDetails": {
      "type": "object",
      "properties": {
        "category": {
          "type": "integer",
          "format": "int32",
          "example": 3,
          "description": "MAPPA Category (0 = unknown)",
          "enum": [0, 1, 2, 3]
        },
        "categoryDescription": {
          "type": "string",
          "example": "MAPPA Cat 1",
          "description": "MAPPA Category Description"
        },
        "level": {
          "type": "integer",
          "format": "int32",
          "example": 1,
          "description": "MAPPA Level (0=unknown)",
          "enum": [0, 1, 2, 3]
        },
        "levelDescription": {
          "type": "string",
          "example": "MAPPA Level 1",
          "description": "MAPPA Level Description"
        },
        "notes": {
          "type": "string",
          "description": "Notes"
        },
        "officer": {
          "description": "Officer",
          "$ref": "#/definitions/StaffHuman"
        },
        "probationArea": {
          "description": "Probation area",
          "$ref": "#/definitions/KeyValue"
        },
        "reviewDate": {
          "type": "string",
          "format": "date",
          "example": "2021-04-27",
          "description": "Next review date"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "2021-01-27",
          "description": "Start date"
        },
        "team": {
          "description": "Team",
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "MappaDetails",
      "description": "MAPPA Details"
    },
    "NewCourtDto": {
      "type": "object",
      "required": ["courtName"],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "true when this court is open"
        },
        "buildingName": {
          "type": "string"
        },
        "code": {
          "type": "string",
          "example": "SALEMC",
          "description": "unique code for this court"
        },
        "country": {
          "type": "string",
          "example": "England"
        },
        "county": {
          "type": "string",
          "example": "South Yorkshire"
        },
        "courtName": {
          "type": "string"
        },
        "courtTypeCode": {
          "type": "string",
          "example": "MAG",
          "description": "type code from standard reference data"
        },
        "fax": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "probationAreaCode": {
          "type": "string",
          "example": "N51",
          "description": "probation area code from probation areas"
        },
        "street": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string"
        },
        "town": {
          "type": "string"
        }
      },
      "title": "NewCourtDto",
      "description": "Court details for a new court"
    },
    "NotificationResponse": {
      "type": "object",
      "required": ["contactId"],
      "properties": {
        "contactId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "NotificationResponse"
    },
    "Nsi": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "actualEndDate": {
          "type": "string",
          "format": "date"
        },
        "actualStartDate": {
          "type": "string",
          "format": "date"
        },
        "expectedEndDate": {
          "type": "string",
          "format": "date"
        },
        "expectedStartDate": {
          "type": "string",
          "format": "date"
        },
        "intendedProvider": {
          "$ref": "#/definitions/ProbationArea"
        },
        "length": {
          "type": "integer",
          "format": "int64"
        },
        "lengthUnit": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "nsiId": {
          "type": "integer",
          "format": "int64"
        },
        "nsiManagers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/NsiManager"
          }
        },
        "nsiOutcome": {
          "$ref": "#/definitions/KeyValue"
        },
        "nsiStatus": {
          "$ref": "#/definitions/KeyValue"
        },
        "nsiSubType": {
          "$ref": "#/definitions/KeyValue"
        },
        "nsiType": {
          "$ref": "#/definitions/KeyValue"
        },
        "outcomeRecall": {
          "type": "boolean",
          "description": "present only for recalls, convenience property indicating this resulted in a recall"
        },
        "recallRejectedOrWithdrawn": {
          "type": "boolean",
          "description": "present only for recalls, convenience property indicating the recall was never accepted"
        },
        "referralDate": {
          "type": "string",
          "format": "date"
        },
        "requirement": {
          "$ref": "#/definitions/Requirement"
        },
        "softDeleted": {
          "type": "boolean"
        },
        "statusDateTime": {
          "type": "string",
          "format": "date-time"
        }
      },
      "title": "Nsi"
    },
    "NsiManager": {
      "type": "object",
      "properties": {
        "endDate": {
          "type": "string",
          "format": "date"
        },
        "probationArea": {
          "$ref": "#/definitions/ProbationArea"
        },
        "staff": {
          "$ref": "#/definitions/StaffDetails"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "team": {
          "$ref": "#/definitions/Team"
        }
      },
      "title": "NsiManager"
    },
    "NsiWrapper": {
      "type": "object",
      "properties": {
        "nsis": {
          "type": "array",
          "description": "List of NSIs",
          "items": {
            "$ref": "#/definitions/Nsi"
          }
        }
      },
      "title": "NsiWrapper",
      "description": "NSI Wrapper"
    },
    "Offence": {
      "type": "object",
      "properties": {
        "createdDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "detail": {
          "$ref": "#/definitions/OffenceDetail"
        },
        "lastUpdatedDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "mainOffence": {
          "type": "boolean"
        },
        "offenceCount": {
          "type": "integer",
          "format": "int64"
        },
        "offenceDate": {
          "type": "string",
          "format": "date-time"
        },
        "offenceId": {
          "type": "string"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64"
        },
        "tics": {
          "type": "integer",
          "format": "int64"
        },
        "verdict": {
          "type": "string"
        }
      },
      "title": "Offence"
    },
    "OffenceDetail": {
      "type": "object",
      "properties": {
        "abbreviation": {
          "type": "string"
        },
        "cjitCode": {
          "type": "string"
        },
        "code": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "form20Code": {
          "type": "string"
        },
        "mainCategoryAbbreviation": {
          "type": "string"
        },
        "mainCategoryCode": {
          "type": "string"
        },
        "mainCategoryDescription": {
          "type": "string"
        },
        "ogrsOffenceCategory": {
          "type": "string"
        },
        "subCategoryAbbreviation": {
          "type": "string"
        },
        "subCategoryCode": {
          "type": "string"
        },
        "subCategoryDescription": {
          "type": "string"
        }
      },
      "title": "OffenceDetail"
    },
    "OffenderAlias": {
      "type": "object",
      "properties": {
        "dateOfBirth": {
          "type": "string",
          "format": "date"
        },
        "firstName": {
          "type": "string"
        },
        "gender": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "middleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "surname": {
          "type": "string"
        }
      },
      "title": "OffenderAlias"
    },
    "OffenderAssessments": {
      "type": "object",
      "properties": {
        "ogrsScore": {
          "type": "integer",
          "format": "int32",
          "description": "Offender Group Reconviction Scale"
        },
        "rsrScore": {
          "type": "number",
          "format": "double",
          "description": "Risk of Serious Recidivism"
        }
      },
      "title": "OffenderAssessments"
    },
    "OffenderDelta": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "example": "UPSERT",
          "description": "Type of delta",
          "enum": ["DELETE", "UPSERT"]
        },
        "dateChanged": {
          "type": "string",
          "format": "date-time",
          "example": "2019-11-27T15:12:43.000Z",
          "description": "The datetime the change occurred"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64",
          "example": 232423,
          "description": "Offender ID"
        }
      },
      "title": "OffenderDelta"
    },
    "OffenderDetail": {
      "type": "object",
      "required": ["offenderId"],
      "properties": {
        "activeProbationManagedSentence": {
          "type": "boolean",
          "description": "identifies if this person is on an active sentence of interest to probation"
        },
        "contactDetails": {
          "$ref": "#/definitions/ContactDetails"
        },
        "currentDisposal": {
          "type": "string",
          "example": 1,
          "description": "deprecated, use activeProbationManagedSentence"
        },
        "currentExclusion": {
          "type": "boolean",
          "description": "When true this record can not be viewed by specific probation staff"
        },
        "currentRestriction": {
          "type": "boolean",
          "description": "When true this record can only be viewed by specific probation staff"
        },
        "currentTier": {
          "type": "string",
          "example": "D2",
          "description": "current tier"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "example": "1982-10-24"
        },
        "exclusionMessage": {
          "type": "string",
          "description": "Message to show staff who have been excluded from viewing this record"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "gender": {
          "type": "string",
          "example": "Male"
        },
        "middleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offenderAliases": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OffenderAlias"
          }
        },
        "offenderId": {
          "type": "integer",
          "format": "int64"
        },
        "offenderManagers": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OffenderManager"
          }
        },
        "offenderProfile": {
          "$ref": "#/definitions/OffenderProfile"
        },
        "otherIds": {
          "$ref": "#/definitions/IDs"
        },
        "partitionArea": {
          "type": "string",
          "example": "National Data"
        },
        "preferredName": {
          "type": "string",
          "example": "Bob"
        },
        "previousSurname": {
          "type": "string",
          "example": "Davis"
        },
        "restrictionMessage": {
          "type": "string",
          "description": "Message to show staff who have not been included to view this record"
        },
        "softDeleted": {
          "type": "boolean",
          "description": "When true this record has been deleted"
        },
        "surname": {
          "type": "string",
          "example": "Smith"
        },
        "title": {
          "type": "string",
          "example": "Mr"
        }
      },
      "title": "OffenderDetail"
    },
    "OffenderDetailSummary": {
      "type": "object",
      "required": ["offenderId"],
      "properties": {
        "activeProbationManagedSentence": {
          "type": "boolean",
          "description": "identifies if this person is on an active sentence of interest to probation"
        },
        "contactDetails": {
          "$ref": "#/definitions/ContactDetailsSummary"
        },
        "currentDisposal": {
          "type": "string",
          "example": 1,
          "description": "deprecated, use activeProbationManagedSentence"
        },
        "currentExclusion": {
          "type": "boolean",
          "description": "When true this record can not be viewed by specific probation staff"
        },
        "currentRestriction": {
          "type": "boolean",
          "description": "When true this record can only be viewed by specific probation staff"
        },
        "dateOfBirth": {
          "type": "string",
          "format": "date",
          "example": "1982-10-24"
        },
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "gender": {
          "type": "string",
          "example": "Male"
        },
        "middleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "offenderId": {
          "type": "integer",
          "format": "int64"
        },
        "offenderProfile": {
          "$ref": "#/definitions/OffenderProfile"
        },
        "otherIds": {
          "$ref": "#/definitions/IDs"
        },
        "partitionArea": {
          "type": "string",
          "example": "National Data"
        },
        "preferredName": {
          "type": "string",
          "example": "Bob"
        },
        "previousSurname": {
          "type": "string",
          "example": "Davis"
        },
        "softDeleted": {
          "type": "boolean",
          "description": "When true this record has been deleted"
        },
        "surname": {
          "type": "string",
          "example": "Smith"
        },
        "title": {
          "type": "string",
          "example": "Mr"
        }
      },
      "title": "OffenderDetailSummary"
    },
    "OffenderDocumentDetail": {
      "type": "object",
      "properties": {
        "author": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "documentName": {
          "type": "string"
        },
        "extendedDescription": {
          "type": "string"
        },
        "id": {
          "type": "string"
        },
        "lastModifiedAt": {
          "type": "string",
          "format": "date-time"
        },
        "parentPrimaryKeyId": {
          "type": "integer",
          "format": "int64"
        },
        "reportDocumentDates": {
          "$ref": "#/definitions/ReportDocumentDates"
        },
        "subType": {
          "$ref": "#/definitions/KeyValue"
        },
        "type": {
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "OffenderDocumentDetail"
    },
    "OffenderDocuments": {
      "type": "object",
      "properties": {
        "convictions": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ConvictionDocuments"
          }
        },
        "documents": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/OffenderDocumentDetail"
          }
        }
      },
      "title": "OffenderDocuments"
    },
    "OffenderIdentifiers": {
      "type": "object",
      "properties": {
        "additionalIdentifiers": {
          "type": "array",
          "description": "Additional identifiers",
          "items": {
            "$ref": "#/definitions/AdditionalIdentifier"
          }
        },
        "offenderId": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "description": "unique identifier for this offender"
        },
        "primaryIdentifiers": {
          "description": "Primary identifiers",
          "$ref": "#/definitions/IDs"
        }
      },
      "title": "OffenderIdentifiers",
      "description": "Offender Identifiers"
    },
    "OffenderLanguages": {
      "type": "object",
      "properties": {
        "languageConcerns": {
          "type": "string"
        },
        "otherLanguages": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "primaryLanguage": {
          "type": "string"
        },
        "requiresInterpreter": {
          "type": "boolean"
        }
      },
      "title": "OffenderLanguages"
    },
    "OffenderLatestRecall": {
      "type": "object",
      "properties": {
        "lastRecall": {
          "description": "Last recall",
          "$ref": "#/definitions/OffenderRecall"
        },
        "lastRelease": {
          "description": "Last release",
          "$ref": "#/definitions/OffenderRelease"
        }
      },
      "title": "OffenderLatestRecall"
    },
    "OffenderManager": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "allocationReason": {
          "$ref": "#/definitions/KeyValue"
        },
        "fromDate": {
          "type": "string",
          "format": "date"
        },
        "partitionArea": {
          "type": "string"
        },
        "probationArea": {
          "$ref": "#/definitions/ProbationArea"
        },
        "providerEmployee": {
          "$ref": "#/definitions/Human"
        },
        "softDeleted": {
          "type": "boolean"
        },
        "staff": {
          "$ref": "#/definitions/StaffHuman"
        },
        "team": {
          "$ref": "#/definitions/Team"
        },
        "toDate": {
          "type": "string",
          "format": "date"
        },
        "trustOfficer": {
          "$ref": "#/definitions/Human"
        }
      },
      "title": "OffenderManager"
    },
    "OffenderProfile": {
      "type": "object",
      "properties": {
        "disabilities": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Disability"
          }
        },
        "ethnicity": {
          "type": "string"
        },
        "genderIdentity": {
          "type": "string",
          "example": "Prefer to self-describe"
        },
        "immigrationStatus": {
          "type": "string"
        },
        "nationality": {
          "type": "string"
        },
        "notes": {
          "type": "string"
        },
        "offenderDetails": {
          "type": "string"
        },
        "offenderLanguages": {
          "$ref": "#/definitions/OffenderLanguages"
        },
        "previousConviction": {
          "$ref": "#/definitions/PreviousConviction"
        },
        "religion": {
          "type": "string"
        },
        "remandStatus": {
          "type": "string"
        },
        "riskColour": {
          "type": "string"
        },
        "secondaryNationality": {
          "type": "string"
        },
        "selfDescribedGender": {
          "type": "string",
          "example": "Jedi"
        },
        "sexualOrientation": {
          "type": "string"
        }
      },
      "title": "OffenderProfile"
    },
    "OffenderRecall": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "2019-11-27",
          "description": "The date the recall occurred"
        },
        "notes": {
          "type": "string",
          "description": "Some notes"
        },
        "reason": {
          "description": "The reason for the recall",
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "OffenderRecall"
    },
    "OffenderRecalledNotification": {
      "type": "object",
      "required": ["nomsPrisonInstitutionCode", "recallDate"],
      "properties": {
        "nomsPrisonInstitutionCode": {
          "type": "string",
          "example": "MDI",
          "description": "The Prison institution code in NOMIS the offender was recalled to"
        },
        "recallDate": {
          "type": "string",
          "format": "date",
          "example": "2020-10-25",
          "description": "The date the offender was returned to custody"
        }
      },
      "title": "OffenderRecalledNotification"
    },
    "OffenderRelease": {
      "type": "object",
      "properties": {
        "date": {
          "type": "string",
          "format": "date",
          "example": "2019-11-26",
          "description": "The date the release occurred"
        },
        "institution": {
          "description": "The institution the offender was released from",
          "$ref": "#/definitions/Institution"
        },
        "notes": {
          "type": "string",
          "description": "Some notes"
        },
        "reason": {
          "description": "The reason for the release",
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "OffenderRelease"
    },
    "OffenderReleasedNotification": {
      "type": "object",
      "required": ["nomsPrisonInstitutionCode"],
      "properties": {
        "nomsPrisonInstitutionCode": {
          "type": "string",
          "example": "MDI",
          "description": "The Prison institution code in NOMIS the offender was released from"
        },
        "releaseDate": {
          "type": "string",
          "format": "date",
          "example": "2020-10-25",
          "description": "The date the offender was released from custody"
        }
      },
      "title": "OffenderReleasedNotification"
    },
    "OffenderUpdate": {
      "type": "object",
      "properties": {
        "action": {
          "type": "string",
          "example": "UPSERT",
          "description": "Type of delta",
          "enum": ["DELETE", "UPSERT"]
        },
        "dateChanged": {
          "type": "string",
          "format": "date-time",
          "example": "2019-11-27T15:12:43.000Z",
          "description": "The datetime the change occurred"
        },
        "failedUpdate": {
          "type": "boolean",
          "example": false,
          "description": "A previously failed update"
        },
        "offenderDeltaId": {
          "type": "integer",
          "format": "int64",
          "example": 341256,
          "description": "Offender Delta ID"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64",
          "example": 232423,
          "description": "Offender ID"
        },
        "sourceRecordId": {
          "type": "integer",
          "format": "int64",
          "example": 13256,
          "description": "Record number from source table"
        },
        "sourceTable": {
          "type": "string",
          "example": "OFFENDER",
          "description": "Source table"
        },
        "status": {
          "type": "string",
          "example": "CREATED",
          "description": "Status"
        }
      },
      "title": "OffenderUpdate"
    },
    "OfficeLocation": {
      "type": "object",
      "properties": {
        "buildingName": {
          "type": "string",
          "example": "Ashley House"
        },
        "buildingNumber": {
          "type": "string",
          "example": 14
        },
        "code": {
          "type": "string",
          "example": "ASP_ASH"
        },
        "county": {
          "type": "string",
          "example": "Somerset"
        },
        "description": {
          "type": "string",
          "example": "Ashley House Approved Premises"
        },
        "postcode": {
          "type": "string",
          "example": "BS2 8NB"
        },
        "streetName": {
          "type": "string",
          "example": "Somerset Street"
        },
        "townCity": {
          "type": "string",
          "example": "Bristol"
        }
      },
      "title": "OfficeLocation"
    },
    "PageOfContactSummary": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/ContactSummary"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PageOfContactSummary"
    },
    "PageOfKeyValue": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PageOfKeyValue"
    },
    "PageOfPrimaryIdentifiers": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/PrimaryIdentifiers"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PageOfPrimaryIdentifiers"
    },
    "PageOfStaffCaseloadEntry": {
      "type": "object",
      "properties": {
        "content": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/StaffCaseloadEntry"
          }
        },
        "empty": {
          "type": "boolean"
        },
        "first": {
          "type": "boolean"
        },
        "last": {
          "type": "boolean"
        },
        "number": {
          "type": "integer",
          "format": "int32"
        },
        "numberOfElements": {
          "type": "integer",
          "format": "int32"
        },
        "pageable": {
          "$ref": "#/definitions/Pageable"
        },
        "size": {
          "type": "integer",
          "format": "int32"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "totalElements": {
          "type": "integer",
          "format": "int64"
        },
        "totalPages": {
          "type": "integer",
          "format": "int32"
        }
      },
      "title": "PageOfStaffCaseloadEntry"
    },
    "Pageable": {
      "type": "object",
      "properties": {
        "offset": {
          "type": "integer",
          "format": "int64"
        },
        "pageNumber": {
          "type": "integer",
          "format": "int32"
        },
        "pageSize": {
          "type": "integer",
          "format": "int32"
        },
        "paged": {
          "type": "boolean"
        },
        "sort": {
          "$ref": "#/definitions/Sort"
        },
        "unpaged": {
          "type": "boolean"
        }
      },
      "title": "Pageable"
    },
    "PersonalCircumstance": {
      "type": "object",
      "properties": {
        "createdDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-11T13:00:00"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "2019-09-11",
          "description": "When the offender ended this circumstance"
        },
        "evidenced": {
          "type": "boolean",
          "example": true,
          "description": "true if evidence was supplied for this circumstance"
        },
        "lastUpdatedDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-11T14:00:00"
        },
        "notes": {
          "type": "string",
          "description": "Additional notes"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64",
          "example": 2500343964,
          "description": "Unique id of this offender"
        },
        "personalCircumstanceId": {
          "type": "integer",
          "format": "int64",
          "example": 2500064995,
          "description": "Unique id of this personal circumstance"
        },
        "personalCircumstanceSubType": {
          "description": "The type of sub personal circumstance",
          "$ref": "#/definitions/KeyValue"
        },
        "personalCircumstanceType": {
          "description": "The type of personal circumstance",
          "$ref": "#/definitions/KeyValue"
        },
        "probationArea": {
          "description": "The probation area that added this circumstance",
          "$ref": "#/definitions/KeyValue"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "2019-09-11",
          "description": "When the offender started this circumstance"
        }
      },
      "title": "PersonalCircumstance"
    },
    "PersonalCircumstances": {
      "type": "object",
      "properties": {
        "personalCircumstances": {
          "type": "array",
          "description": "List of personal circumstances",
          "items": {
            "$ref": "#/definitions/PersonalCircumstance"
          }
        }
      },
      "title": "PersonalCircumstances",
      "description": "Personal circumstances Wrapper"
    },
    "PersonalContact": {
      "type": "object",
      "properties": {
        "address": {
          "$ref": "#/definitions/AddressSummary"
        },
        "createdDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-10T12:00:00Z"
        },
        "emailAddress": {
          "type": "string",
          "example": "example@example.com"
        },
        "endDate": {
          "type": "string",
          "format": "date-time",
          "example": "2021-07-10T00:00:00Z"
        },
        "firstName": {
          "type": "string",
          "example": "Brian"
        },
        "gender": {
          "type": "string",
          "example": "Male"
        },
        "lastUpdatedDatetime": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-10T14:00:00Z"
        },
        "mobileNumber": {
          "type": "string",
          "example": "0123456789"
        },
        "notes": {
          "type": "string",
          "example": "Some notes about this personal contact"
        },
        "otherNames": {
          "type": "string",
          "example": "Danger"
        },
        "personalContactId": {
          "type": "integer",
          "format": "int64",
          "example": 1
        },
        "previousSurname": {
          "type": "string",
          "example": "Haggis"
        },
        "relationship": {
          "type": "string",
          "example": "Father"
        },
        "relationshipType": {
          "$ref": "#/definitions/KeyValue"
        },
        "startDate": {
          "type": "string",
          "format": "date-time",
          "example": "2021-06-10T00:00:00Z"
        },
        "surname": {
          "type": "string",
          "example": "Cheese"
        },
        "title": {
          "type": "string",
          "example": "Mr"
        }
      },
      "title": "PersonalContact"
    },
    "PhoneNumber": {
      "type": "object",
      "properties": {
        "number": {
          "type": "string"
        },
        "type": {
          "type": "string",
          "enum": ["MOBILE", "TELEPHONE"]
        }
      },
      "title": "PhoneNumber"
    },
    "PreviousConviction": {
      "type": "object",
      "properties": {
        "convictionDate": {
          "type": "string",
          "format": "date"
        },
        "detail": {
          "type": "object",
          "additionalProperties": {
            "type": "string"
          }
        }
      },
      "title": "PreviousConviction"
    },
    "PrimaryIdentifiers": {
      "type": "object",
      "required": ["crn"],
      "properties": {
        "crn": {
          "type": "string",
          "example": "12345C",
          "description": "case reference number"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64",
          "example": 1234567,
          "description": "unique identifier for this offender"
        }
      },
      "title": "PrimaryIdentifiers",
      "description": "Offender primary identifiers"
    },
    "ProbationArea": {
      "type": "object",
      "required": ["probationAreaId"],
      "properties": {
        "code": {
          "type": "string",
          "example": "N01",
          "description": "area code"
        },
        "description": {
          "type": "string",
          "example": "NPS North West",
          "description": "description"
        },
        "institution": {
          "$ref": "#/definitions/Institution"
        },
        "nps": {
          "type": "boolean",
          "example": true,
          "description": "True if NPS else CRC"
        },
        "organisation": {
          "$ref": "#/definitions/KeyValue"
        },
        "probationAreaId": {
          "type": "integer",
          "format": "int64"
        },
        "teams": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AllTeam"
          }
        }
      },
      "title": "ProbationArea"
    },
    "ProbationAreaWithLocalDeliveryUnits": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "N01",
          "description": "area code"
        },
        "description": {
          "type": "string",
          "example": "NPS North West",
          "description": "description"
        },
        "localDeliveryUnits": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/LocalDeliveryUnit"
          }
        }
      },
      "title": "ProbationAreaWithLocalDeliveryUnits"
    },
    "ProbationStatusDetail": {
      "type": "object",
      "properties": {
        "awaitingPsr": {
          "type": "boolean",
          "description": "True if the offender has a event with no sentence which has been adjourned for a pre-sentence report"
        },
        "inBreach": {
          "type": "boolean",
          "description": "True if the offender is in breach of a current sentence"
        },
        "preSentenceActivity": {
          "type": "boolean",
          "description": "True if the offender has a conviction with no sentence"
        },
        "previouslyKnownTerminationDate": {
          "type": "string",
          "format": "date",
          "description": "The termination date of the most recently terminated sentence"
        },
        "status": {
          "type": "string",
          "enum": ["CURRENT", "NOT_SENTENCED", "PREVIOUSLY_KNOWN"]
        }
      },
      "title": "ProbationStatusDetail"
    },
    "Provision": {
      "type": "object",
      "properties": {
        "finishDate": {
          "type": "string",
          "format": "date"
        },
        "notes": {
          "type": "string"
        },
        "provisionId": {
          "type": "integer",
          "format": "int64"
        },
        "provisionType": {
          "$ref": "#/definitions/KeyValue"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "Provision"
    },
    "PssRequirement": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Is the requirement currently active"
        },
        "subType": {
          "$ref": "#/definitions/KeyValue"
        },
        "type": {
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "PssRequirement"
    },
    "PssRequirements": {
      "type": "object",
      "properties": {
        "pssRequirements": {
          "type": "array",
          "description": "List of pssRequirements associated with this conviction",
          "items": {
            "$ref": "#/definitions/PssRequirement"
          }
        }
      },
      "title": "PssRequirements"
    },
    "ReferenceData": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "true if this item is currently selectable in Delius"
        },
        "code": {
          "type": "string",
          "example": "VISO",
          "description": "code of reference data"
        },
        "description": {
          "type": "string",
          "example": "ViSOR Number",
          "description": "description of reference data"
        }
      },
      "title": "ReferenceData"
    },
    "ReferenceDataList": {
      "type": "object",
      "properties": {
        "referenceData": {
          "type": "array",
          "description": "List of reference data items",
          "items": {
            "$ref": "#/definitions/ReferenceData"
          }
        }
      },
      "title": "ReferenceDataList",
      "description": "Reference data list"
    },
    "ReferenceDataSets": {
      "type": "object",
      "properties": {
        "referenceDataSets": {
          "type": "array",
          "description": "List of reference data sets, for example \n{\n            \"code\": \"ADDITIONAL SENTENCE\",\n            \"description\": \"Additional Sentence\"\n        }",
          "items": {
            "$ref": "#/definitions/KeyValue"
          }
        }
      },
      "title": "ReferenceDataSets",
      "description": "Reference data sets"
    },
    "ReferralEndResponse": {
      "type": "object",
      "properties": {
        "nsiId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ReferralEndResponse"
    },
    "ReferralStartResponse": {
      "type": "object",
      "properties": {
        "nsiId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "ReferralStartResponse"
    },
    "Registration": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean",
          "description": "true if active"
        },
        "deregisteringNotes": {
          "type": "string",
          "description": "Latest Additional notes about the de-registration"
        },
        "deregisteringOfficer": {
          "description": "Latest Probation officer who removed the offender from the register",
          "$ref": "#/definitions/StaffHuman"
        },
        "deregisteringProbationArea": {
          "description": "Latest Probation area that removed the offender from the register",
          "$ref": "#/definitions/KeyValue"
        },
        "deregisteringTeam": {
          "description": "Latest Probation team that removed the offender from the register",
          "$ref": "#/definitions/KeyValue"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "example": "2021-01-30",
          "description": "Latest Date removed from register"
        },
        "nextReviewDate": {
          "type": "string",
          "format": "date",
          "example": "2021-01-30",
          "description": "Date probation should review if the offender should still be on still register"
        },
        "notes": {
          "type": "string",
          "description": "Additional notes"
        },
        "numberOfPreviousDeregistrations": {
          "type": "integer",
          "format": "int32",
          "description": "Count of number times this was de-registered"
        },
        "offenderId": {
          "type": "integer",
          "format": "int64",
          "example": 2500343964,
          "description": "Unique id of this offender"
        },
        "register": {
          "description": "Register this offender has been added to. For example RoSH",
          "$ref": "#/definitions/KeyValue"
        },
        "registerCategory": {
          "description": "Category of register. Only used for certain registers for example Hate Crime category",
          "$ref": "#/definitions/KeyValue"
        },
        "registerLevel": {
          "description": "Level of register. Only used for certain registers for example Lifer - Supervised",
          "$ref": "#/definitions/KeyValue"
        },
        "registeringOfficer": {
          "description": "Probation officer who added the offender to the register",
          "$ref": "#/definitions/StaffHuman"
        },
        "registeringProbationArea": {
          "description": "Probation area that added the offender to the register",
          "$ref": "#/definitions/KeyValue"
        },
        "registeringTeam": {
          "description": "Probation team that added the offender to the register",
          "$ref": "#/definitions/KeyValue"
        },
        "registrationId": {
          "type": "integer",
          "format": "int64",
          "example": 2500064995,
          "description": "Unique id of this registration"
        },
        "registrationReviews": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/RegistrationReview"
          }
        },
        "reviewPeriodMonths": {
          "type": "integer",
          "format": "int64",
          "example": 6,
          "description": "Number of months a review should take place"
        },
        "riskColour": {
          "type": "string",
          "example": "Amber",
          "description": "Literal visual colour this register represents"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "example": "2021-01-30",
          "description": "Date added to register"
        },
        "type": {
          "description": "Type of register. For example Low RoSH",
          "$ref": "#/definitions/KeyValue"
        },
        "warnUser": {
          "type": "boolean",
          "description": "true if the register is serious enough to warn the probation officer of risk to themselves"
        }
      },
      "title": "Registration"
    },
    "RegistrationReview": {
      "type": "object",
      "properties": {
        "completed": {
          "type": "boolean",
          "description": "If the review has been completed"
        },
        "notes": {
          "type": "string",
          "description": "Notes attached to the registration review"
        },
        "reviewDate": {
          "type": "string",
          "format": "date",
          "description": "Date the registration was reviewed"
        },
        "reviewDateDue": {
          "type": "string",
          "format": "date",
          "description": "Date the next registration review is due"
        },
        "reviewingOfficer": {
          "description": "Probation office that reviewed the registration",
          "$ref": "#/definitions/StaffHuman"
        },
        "reviewingTeam": {
          "description": "Probation team that reviewed the registration",
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "RegistrationReview"
    },
    "Registrations": {
      "type": "object",
      "properties": {
        "registrations": {
          "type": "array",
          "description": "List of registrations",
          "items": {
            "$ref": "#/definitions/Registration"
          }
        }
      },
      "title": "Registrations",
      "description": "Registration Wrapper"
    },
    "ReplaceCustodyKeyDates": {
      "type": "object",
      "properties": {
        "conditionalReleaseDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Conditional release date"
        },
        "expectedReleaseDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Expected release date"
        },
        "hdcEligibilityDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Home detention curfew eligibility date"
        },
        "licenceExpiryDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Licence expiry date"
        },
        "paroleEligibilityDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Parole eligibility date"
        },
        "postSentenceSupervisionEndDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Post sentence Supervision end date. AKA Top-up supervision end data"
        },
        "sentenceExpiryDate": {
          "type": "string",
          "format": "date",
          "example": "2020-06-23",
          "description": "Sentence expiry date"
        }
      },
      "title": "ReplaceCustodyKeyDates",
      "description": "Any dates not supplied will be removed from the associated conviction"
    },
    "ReportDocumentDates": {
      "type": "object",
      "properties": {
        "completedDate": {
          "type": "string",
          "format": "date-time"
        },
        "requestedDate": {
          "type": "string",
          "format": "date"
        },
        "requiredDate": {
          "type": "string",
          "format": "date"
        }
      },
      "title": "ReportDocumentDates"
    },
    "ReportManager": {
      "type": "object",
      "properties": {
        "active": {
          "type": "boolean"
        },
        "staff": {
          "$ref": "#/definitions/StaffHuman"
        }
      },
      "title": "ReportManager"
    },
    "Requirement": {
      "type": "object",
      "required": ["requirementId"],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "Is the requirement currently active"
        },
        "adRequirementTypeMainCategory": {
          "$ref": "#/definitions/KeyValue"
        },
        "adRequirementTypeSubCategory": {
          "$ref": "#/definitions/KeyValue"
        },
        "commencementDate": {
          "type": "string",
          "format": "date"
        },
        "createdDatetime": {
          "type": "string",
          "format": "date-time"
        },
        "expectedEndDate": {
          "type": "string",
          "format": "date"
        },
        "expectedStartDate": {
          "type": "string",
          "format": "date"
        },
        "length": {
          "type": "integer",
          "format": "int64",
          "description": "The number of temporal units to complete the requirement (see lengthUnit field for unit)"
        },
        "lengthUnit": {
          "type": "string",
          "description": "The temporal unit corresponding to the length field"
        },
        "rarCount": {
          "type": "integer",
          "format": "int64",
          "description": "Total RAR days completed"
        },
        "requirementId": {
          "type": "integer",
          "format": "int64",
          "description": "Unique identifier for the requirement"
        },
        "requirementNotes": {
          "type": "string",
          "description": "Notes added by probation relating to the requirement"
        },
        "requirementTypeMainCategory": {
          "$ref": "#/definitions/KeyValue"
        },
        "requirementTypeSubCategory": {
          "$ref": "#/definitions/KeyValue"
        },
        "restrictive": {
          "type": "boolean",
          "description": "Is the main category restrictive"
        },
        "softDeleted": {
          "type": "boolean"
        },
        "startDate": {
          "type": "string",
          "format": "date"
        },
        "terminationDate": {
          "type": "string",
          "format": "date"
        },
        "terminationReason": {
          "$ref": "#/definitions/KeyValue"
        }
      },
      "title": "Requirement"
    },
    "Resource": {
      "type": "object",
      "properties": {
        "description": {
          "type": "string"
        },
        "file": {
          "type": "file"
        },
        "filename": {
          "type": "string"
        },
        "inputStream": {
          "$ref": "#/definitions/InputStream"
        },
        "open": {
          "type": "boolean"
        },
        "readable": {
          "type": "boolean"
        },
        "uri": {
          "type": "string",
          "format": "uri"
        },
        "url": {
          "type": "string",
          "format": "url"
        }
      },
      "title": "Resource"
    },
    "ResourcingDecision": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "R",
          "description": "The decision code"
        },
        "date": {
          "type": "string",
          "format": "date",
          "example": "2021-04-27",
          "description": "Date decision was made"
        },
        "description": {
          "type": "string",
          "example": "Retained",
          "description": "The decision description"
        }
      },
      "title": "ResourcingDecision",
      "description": "Risk Resourcing Details"
    },
    "ResponsibleOfficer": {
      "type": "object",
      "required": ["nomsNumber", "omEndDate", "omStartDate", "staffCode", "surname"],
      "properties": {
        "currentOm": {
          "type": "boolean"
        },
        "currentPom": {
          "type": "boolean"
        },
        "currentRo": {
          "type": "boolean"
        },
        "forenames": {
          "type": "string"
        },
        "lduCode": {
          "type": "string"
        },
        "lduDescription": {
          "type": "string"
        },
        "nomsNumber": {
          "type": "string"
        },
        "offenderManagerId": {
          "type": "integer",
          "format": "int64"
        },
        "omEndDate": {
          "type": "string",
          "format": "date"
        },
        "omStartDate": {
          "type": "string",
          "format": "date"
        },
        "prisonOffenderManagerId": {
          "type": "integer",
          "format": "int64"
        },
        "probationAreaCode": {
          "type": "string"
        },
        "probationAreaDescription": {
          "type": "string"
        },
        "providerTeamCode": {
          "type": "string"
        },
        "providerTeamDescription": {
          "type": "string"
        },
        "responsibleOfficerId": {
          "type": "integer",
          "format": "int64"
        },
        "staffCode": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      },
      "title": "ResponsibleOfficer"
    },
    "ResponsibleOfficerSwitch": {
      "type": "object",
      "properties": {
        "switchToCommunityOffenderManager": {
          "type": "boolean",
          "example": true,
          "description": "true if the RO should be set the the current community offender manager"
        },
        "switchToPrisonOffenderManager": {
          "type": "boolean",
          "example": false,
          "description": "true if the RO should be set the the current prison offender manager"
        }
      },
      "title": "ResponsibleOfficerSwitch",
      "description": "Request body for switching the responsible officer"
    },
    "RiskResourcingDetails": {
      "type": "object",
      "properties": {
        "decision": {
          "description": "decision",
          "$ref": "#/definitions/ResourcingDecision"
        },
        "enhancedResourcing": {
          "type": "boolean",
          "example": true,
          "description": "This is equivalent to indicating if the person is retained by NPS when there was a NPS/CRC split. true = requires enhanced resourcing as if they were allocated to the NPS"
        },
        "relatedConvictionId": {
          "type": "integer",
          "format": "int64",
          "example": 1219491,
          "description": "id of the conviction that lead to the decision"
        }
      },
      "title": "RiskResourcingDetails",
      "description": "Risk Resourcing Details"
    },
    "Sentence": {
      "type": "object",
      "properties": {
        "additionalSentences": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/AdditionalSentence"
          }
        },
        "defaultLength": {
          "type": "integer",
          "format": "int64"
        },
        "description": {
          "type": "string"
        },
        "effectiveLength": {
          "type": "integer",
          "format": "int64"
        },
        "expectedSentenceEndDate": {
          "type": "string",
          "format": "date",
          "description": "The expected end date of the sentence"
        },
        "failureToComplyLimit": {
          "type": "integer",
          "format": "int64"
        },
        "lengthInDays": {
          "type": "integer",
          "format": "int64"
        },
        "originalLength": {
          "type": "integer",
          "format": "int64"
        },
        "originalLengthUnits": {
          "type": "string"
        },
        "secondLength": {
          "type": "integer",
          "format": "int64"
        },
        "secondLengthUnits": {
          "type": "string"
        },
        "sentenceId": {
          "type": "integer",
          "format": "int64"
        },
        "sentenceType": {
          "description": "Sentence type and description",
          "$ref": "#/definitions/KeyValue"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "Date sentence started"
        },
        "terminationDate": {
          "type": "string",
          "format": "date"
        },
        "terminationReason": {
          "type": "string"
        },
        "unpaidWork": {
          "description": "Unpaid Work to date associated with this sentence",
          "$ref": "#/definitions/UnpaidWork"
        }
      },
      "title": "Sentence"
    },
    "SentenceStatus": {
      "type": "object",
      "properties": {
        "actualReleaseDate": {
          "type": "string",
          "format": "date"
        },
        "custodialType": {
          "$ref": "#/definitions/KeyValue"
        },
        "length": {
          "type": "integer",
          "format": "int64"
        },
        "lengthUnit": {
          "type": "string"
        },
        "licenceExpiryDate": {
          "type": "string",
          "format": "date"
        },
        "mainOffence": {
          "$ref": "#/definitions/KeyValue"
        },
        "pssEndDate": {
          "type": "string",
          "format": "date"
        },
        "sentence": {
          "$ref": "#/definitions/KeyValue"
        },
        "sentenceDate": {
          "type": "string",
          "format": "date"
        },
        "sentenceId": {
          "type": "integer",
          "format": "int64"
        }
      },
      "title": "SentenceStatus"
    },
    "Sort": {
      "type": "object",
      "properties": {
        "empty": {
          "type": "boolean"
        },
        "sorted": {
          "type": "boolean"
        },
        "unsorted": {
          "type": "boolean"
        }
      },
      "title": "Sort"
    },
    "StaffCaseloadEntry": {
      "type": "object",
      "properties": {
        "crn": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "middleNames": {
          "type": "array",
          "items": {
            "type": "string"
          }
        },
        "preferredName": {
          "type": "string"
        },
        "surname": {
          "type": "string"
        }
      },
      "title": "StaffCaseloadEntry"
    },
    "StaffDetails": {
      "type": "object",
      "properties": {
        "email": {
          "type": "string",
          "example": "sheila.hancock@test.justice.gov.uk",
          "description": "the optional email address of this staff member, will be absent if the staff member is not a user of Delius"
        },
        "staff": {
          "description": "staff name details",
          "$ref": "#/definitions/Human"
        },
        "staffCode": {
          "type": "string",
          "example": "SH0001",
          "description": "staff code AKA officer code"
        },
        "staffIdentifier": {
          "type": "integer",
          "format": "int64",
          "example": 123456,
          "description": "staff identifier"
        },
        "teams": {
          "type": "array",
          "description": "all teams related to this staff member",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "telephoneNumber": {
          "type": "string",
          "example": "020 1111 2222",
          "description": "the optional telephone number of this staff member, will be absent if the staff member is not a user of Delius"
        },
        "username": {
          "type": "string",
          "example": "SheilaHancockNPS",
          "description": "the optional username of this staff member, will be absent if the staff member is not a user of Delius"
        }
      },
      "title": "StaffDetails"
    },
    "StaffHuman": {
      "type": "object",
      "properties": {
        "code": {
          "type": "string",
          "example": "AN001A",
          "description": "Staff code"
        },
        "forenames": {
          "type": "string",
          "example": "Sheila Linda",
          "description": "Given names"
        },
        "surname": {
          "type": "string",
          "example": "Hancock",
          "description": "Family name"
        },
        "unallocated": {
          "type": "boolean"
        }
      },
      "title": "StaffHuman"
    },
    "Team": {
      "type": "object",
      "properties": {
        "borough": {
          "description": "Team's borough",
          "$ref": "#/definitions/KeyValue"
        },
        "code": {
          "type": "string",
          "example": "C01T04",
          "description": "Team code"
        },
        "description": {
          "type": "string",
          "example": "OMU A",
          "description": "Team description"
        },
        "district": {
          "description": "Team's district",
          "$ref": "#/definitions/KeyValue"
        },
        "emailAddress": {
          "type": "string",
          "example": "first.last@digital.justice.gov.uk",
          "description": "Team email address"
        },
        "endDate": {
          "type": "string",
          "format": "date",
          "description": "Team's end date"
        },
        "localDeliveryUnit": {
          "description": "Local Delivery Unit - provides a geographic grouping of teams",
          "$ref": "#/definitions/KeyValue"
        },
        "startDate": {
          "type": "string",
          "format": "date",
          "description": "Team's start date"
        },
        "teamType": {
          "description": "Team Type - provides a logical, not necessarily geographic, grouping of teams",
          "$ref": "#/definitions/KeyValue"
        },
        "telephone": {
          "type": "string",
          "example": "OMU A",
          "description": "Team telephone, often not populated"
        }
      },
      "title": "Team"
    },
    "TeamCreationResult": {
      "type": "object",
      "properties": {
        "teams": {
          "type": "array",
          "description": "List of teams created",
          "items": {
            "$ref": "#/definitions/Team"
          }
        },
        "unallocatedStaff": {
          "type": "array",
          "description": "List of unallocated staff created",
          "items": {
            "$ref": "#/definitions/StaffHuman"
          }
        }
      },
      "title": "TeamCreationResult"
    },
    "UnpaidWork": {
      "type": "object",
      "properties": {
        "appointments": {
          "description": "Details of appointment history to date",
          "$ref": "#/definitions/Appointments"
        },
        "minutesCompleted": {
          "type": "integer",
          "format": "int64",
          "description": "Minutes of unpaid work credited to the service user to date"
        },
        "minutesOrdered": {
          "type": "integer",
          "format": "int64",
          "description": "Minutes of unpaid work ordered for this sentence"
        },
        "status": {
          "type": "string",
          "description": "Status description"
        }
      },
      "title": "UnpaidWork"
    },
    "UpdateCourtDto": {
      "type": "object",
      "required": ["courtName"],
      "properties": {
        "active": {
          "type": "boolean",
          "description": "true when this court is open"
        },
        "buildingName": {
          "type": "string"
        },
        "country": {
          "type": "string",
          "example": "England"
        },
        "county": {
          "type": "string",
          "example": "South Yorkshire"
        },
        "courtName": {
          "type": "string"
        },
        "courtTypeCode": {
          "type": "string",
          "example": "MAG",
          "description": "type code from standard reference data"
        },
        "fax": {
          "type": "string"
        },
        "locality": {
          "type": "string"
        },
        "postcode": {
          "type": "string"
        },
        "street": {
          "type": "string"
        },
        "telephoneNumber": {
          "type": "string"
        },
        "town": {
          "type": "string"
        }
      },
      "title": "UpdateCourtDto",
      "description": "Court details for updating an exiting court"
    },
    "UpdateCustody": {
      "type": "object",
      "properties": {
        "nomsPrisonInstitutionCode": {
          "type": "string",
          "example": "MDI",
          "description": "Prison institution code in NOMIS"
        }
      },
      "title": "UpdateCustody"
    },
    "UpdateCustodyBookingNumber": {
      "type": "object",
      "properties": {
        "bookingNumber": {
          "type": "string",
          "example": "38339A",
          "description": "Prison Booking number to be set on the conviction. AKA bookNo, prison number "
        },
        "sentenceStartDate": {
          "type": "string",
          "format": "date",
          "example": "2020-02-28",
          "description": "Sentence start date from prison used to match with probation conviction"
        }
      },
      "title": "UpdateCustodyBookingNumber"
    },
    "UpdateOffenderDetails": {
      "type": "object",
      "properties": {
        "firstName": {
          "type": "string",
          "example": "John"
        },
        "surname": {
          "type": "string",
          "example": "Smith"
        }
      },
      "title": "UpdateOffenderDetails"
    },
    "UpdateOffenderNomsNumber": {
      "type": "object",
      "properties": {
        "nomsNumber": {
          "type": "string",
          "example": "G5555TT",
          "description": "NOMS number to be set on the offender. AKA offenderNo"
        }
      },
      "title": "UpdateOffenderNomsNumber"
    },
    "UserDetails": {
      "type": "object",
      "required": ["enabled", "firstName", "surname", "userId"],
      "properties": {
        "email": {
          "type": "string",
          "example": "test@digital.justice.gov.uk",
          "description": "Email address of the user"
        },
        "enabled": {
          "type": "boolean",
          "example": false,
          "description": "Account is enabled if true"
        },
        "firstName": {
          "type": "string",
          "example": "John",
          "description": "First name of the user"
        },
        "roles": {
          "type": "array",
          "description": "Roles For this User",
          "items": {
            "$ref": "#/definitions/UserRole"
          }
        },
        "surname": {
          "type": "string",
          "example": "Smith",
          "description": "Surname of the user"
        },
        "userId": {
          "type": "integer",
          "format": "int64",
          "example": 12345,
          "description": "User ID of the user"
        },
        "username": {
          "type": "string",
          "example": "test.user",
          "description": "The username of the user"
        }
      },
      "title": "UserDetails",
      "description": "User Details"
    },
    "UserRole": {
      "type": "object",
      "required": ["name"],
      "properties": {
        "name": {
          "type": "string",
          "example": "TEST_ROLE",
          "description": "Code/Name of the Role"
        }
      },
      "title": "UserRole",
      "description": "User Roles"
    }
  }
}
